[{"title":"sorting algorithm","metas":{"title":"sorting algorithm","author":"sporule","date":"","categories":["algorithm"],"tags":["python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/AdapterPattern/AdapterPattern.png"},"content":"\n\n## What is Adapter Pattern\n\nSometimes we want to integrate a vendor solution or a component that is not part of the design. As we can't change the vendors solution, and we don't want to change how our application works. Adapter Pattern is very useful in this scenario, it adds a layer between our solution and the vendors solution. \n\n## Adapter Pattern Implementation\n\nBelow is a simple example of using Remote Control to control a TV.\n\nFirst we have Remote Control and TV.\n\n```python\nclass TV():\n    def __init__(self,name):\n        self._name=name\n        \n    @property\n    def Name(self):\n        return self._name\n    \n    def SwitchOn(self):\n        print(self.Name +\" is on.\")\n\nclass RemoteControl():\n    def __init__(self,tv):\n        self._tv = tv\n    \n    def SwitchOnTV(self):\n        self._tv.On()\n```\n\nYou can see that the TV has a function SwitchOn(), but the Remote Control is calling the function On().\n\nNow we create a new model that add the function On() in TV, the On() function will call the TV's SwtichOn() function.\n\n```python\nclass TVAdapter():\n    def __init__(self,tv):\n        self._tv=tv\n    \n    def On(self):\n        self._tv.SwitchOn()\n```\n\nRun a test:\n\n```python\n'''without adapter'''\ntv = TV(\"ABC TV\")\ntry:\n    control = RemoteControl(tv)\n    control.SwitchOnTV() #raise error, AttributeError: 'TV' object has no attribute 'On'\nexcept Exception as ex:\n    print(str(ex)) \n\n'''with adapter'''\n#add adapter to connect tv and remote\ntv_adapter = TVAdapter(tv)\ncontrol = RemoteControl(tv_adapter)\ncontrol.SwitchOnTV() #output ABC TV is on.\n```\n\nAs you can see, without adapter it will throw an error. The adapter connects the TV and Remote together without changing the TV class or Remote class.\n\n### Diagram\n\n![AdapterPattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/AdapterPattern/AdapterPattern.png)\n\n## Example Code\n\n[Adapter Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/AdapterPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Sometimes we want to integrate a vendor solution or a component that is not part of the design. As we can't change the vendors solution, and we don't want to ......","path":"posts/a_draft_sorting-algorithm.d87060484d2a5989193253c0a463e98e.md"},{"title":"adapter pattern - connects two existing components together without touching them","metas":{"title":"adapter pattern - connects two existing components together without touching them","author":"sporule","date":"2029-03-07","categories":["design pattern"],"tags":["adapter pattern","python"],"coverimage":"https://i.imgur.com/GzmpA4s.png"},"content":"\n\naudio\n youtube-dl -f bestaudio --add-metadata -x --audio-format mp3 --audio-quality 0 https://www.youtube.com/watch?v=%i -o \"%d%f\"\n\n\n video\n youtube-dl -f best https://www.youtube.com/watch?v=%i -o \"%d%f\"","excerpt":"audio youtube-dl -f bestaudio --add-metadata -x --audio-format mp3 --audio-quality 0 https://www.youtube.com/watch?v=%i -o \"%d%f\" video youtube-dl -f best https://www.youtube.com/watch?v=%i -o \"%d%f\" ......","path":"posts/download-command-for-mpyst.feb467345d889ddc6a59cf3d9536cde9.md"},{"title":"flood fill algorithm explaination","metas":{"title":"flood fill algorithm explaination","author":"sporule","date":"2020-05-16","categories":["algorithm"],"tags":["python","leetcode","flood fill"],"coverimage":"https://i.imgur.com/tgtL2C0.png"},"content":"\n\n## What is Flood fill\n\nFlood fill is a common algorithm question which you can see almost everywhere. This week's challenge in LeetCode is Flood Fill. \n\nThe explanation from LeetCode:\n\n> An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\n> \n> Given a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, \"flood fill\" the image.\n>\n> To perform a \"flood fill\", consider the starting pixel, plus any pixels connected 4-directionally to the starting pixel of the same color as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color as the starting pixel), and so on. Replace the color of all of the aforementioned pixels with the newColor.\n> \n> At the end, return the modified image.\n> \n> Example:\n> ```python\n> # Input:\n> image = [[1,1,1],[1,1,0],[1,0,1]]\n> sr = 1, sc = 1, newColor = 2\n> # Output:\n> [[2,2,2],[2,2,0],[2,0,1]]\n> \n> \"\"\"Explanation:\n> # From the center of the image (with position (sr, sc) = (1, 1)), all pixels connected \n> by a path of the same color as the starting pixel are colored with the new color.\n> Note the bottom corner is not colored 2, because it is not 4-directionally connected\n> to the starting pixel.\"\"\"\n> ```\n\n**Visualization**:\n\nIt starts from (1,1), the existing color is 1, and the new color is 2.\n\n|     |     |     |\n| --- | --- | --- |\n| 1   | 1   | 1   |\n| 1   | 1   | 0   |\n| 1   | 0   | 1   |\n\n\nThe color in (1,1) will become 2\n\n|     |         |     |\n| --- | ------- | --- |\n| 1   | 1       | 1   |\n| 1   | 2 (new) | 0   |\n| 1   | 0       | 1   |\n\nThen it will check 4-directionally to see if they are the same color as the old color 1\n\n|           |           |           |\n| --------- | --------- | --------- |\n| 1         | 1 (check) | 1         |\n| 1 (check) | 2         | 0 (check) |\n| 1         | 0 (check) | 1         |\n\nSome of their color become new color 2 as well because their old color is 1\n\n|         |         |     |\n| ------- | ------- | --- |\n| 1       | 2 (new) | 1   |\n| 2 (new) | 2       | 0   |\n| 1       | 0       | 1   |\n\nThen it will check all 4-directionally to see if there are any other matches\n\n|           |     |           |\n| --------- | --- | --------- |\n| 1 (check) | 2   | 1 (check) |\n| 2         | 2   | 0         |\n| 1 (check) | 0   | 1         |\n\nSome of their color become new color 2 as well because their old color is 1\n\n|         |     |         |\n| ------- | --- | ------- |\n| 2 (new) | 2   | 2 (new) |\n| 2       | 2   | 0       |\n| 2 (new) | 0   | 1       |\n\nThen they will check again\n\n|           |           |           |\n| --------- | --------- | --------- |\n| 2         | 2 (check) | 2         |\n| 2 (check) | 2         | 0 (check) |\n| 2         | 0 (check) | 1         |\n\nIf the algorithm discovered that none of the color is equal to the old color 1, the algorithm will stop\n\n|     |     |     |\n| --- | --- | --- |\n| 2   | 2   | 2   |\n| 2   | 2   | 0   |\n| 2   | 0   | 1   |\n\n## Python Implementation\n\n\n```python\n    def floodFill(self, image, sr, sc, newColor):\n        # initiate function, for the purpose of identifying the color of the initial sr,sc\n        selected_color = image[sr][sc]\n        if selected_color != newColor:\n            fill(image,sr,sc,selected_color,newColor)\n        return image\n\n    def fill(image,sr,sc,color,newColor):\n        # recursive function to fill 4-directionally incrementally\n        if sr<len(image) and sr>=0 and sc <len(image[0]) and sc>=0:\n            print(\"checking\",sr,sc)\n            if image[sr][sc]==color:\n                image[sr][sc] = newColor\n                print(\"updated to new color:\",sr,sc)\n                printImage(image)\n                fill(image,sr+1,sc,color,newColor)\n                fill(image,sr-1,sc,color,newColor)\n                fill(image,sr,sc+1,color,newColor)\n                fill(image,sr,sc-1,color,newColor)\n\n    def printImage(image):\n        # helper method to print out the shape of the function\n        print(\"image:\")\n        for x in range(len(image)):\n            print(image[x])\n```\n","excerpt":"Flood fill is a common algorithm question which you can see almost everywhere. This week's challenge in LeetCode is Flood Fill. The explanation from LeetCode:\n\n> An image is represented by ......","path":"posts/flood-fill-algorithm.ab5f7077bd7c7880f8ca39d787bf6a03.md"},{"title":"how to secure your hadoop development environment to avoid hackers","metas":{"title":"how to secure your hadoop development environment to avoid hackers","author":"sporule","date":"2020-05-03","categories":["big data"],"tags":["hadoop","hive","spark","airflow","hacker","ddos"],"coverimage":"https://i.imgur.com/3htUxaT.png"},"content":"\n\n## The Issue\n\nAs you probably remember, I built a Hadoop development environment as docker image with most of default settings, including default ports and credentials. The post is here [Release Hadoop Cluster In Docker](https://www.sporule.com/items/release-hadoop-cluster-in-docker).\n\nAs it is a development environment, especially is a docker environment, so I paid no attention to secure the environment. Recently, I noticed unusual jobs were submitted into my cluster (yarn) every minute. For example:\n\n![hadoop-attack](https://i.imgur.com/mGtPFLz.png)\n\nBy looking into the logs, it looks like the \"weird\" jobs are trying to use wget to download some sort of malware to control my nodes. Potentially for bitcoin mining, DDOS attack or something else.\n\n\n## Diagnose\n\n\n- I checked my docker build files, all files and applications are from the official sources. **It is unlikely they will have malware inside my cluster**.\n- I turned off all the ports from the cluster, no further unusual jobs were detected. **It means the jobs were submitted from outside (internet)**.\n- I turned on the 8088 ports from the resources manager node (yarn), the unusual jobs reappeared immediately. Then I turned off 8088 ports but open all other ports, the unusual jobs disappeared. **It means the jobs were submitted to the  resources manager port 8088.**\n- I have turned on all the ports but changed the domain name, the unusual jobs reappeared after few hours. **It means the attach was using some kind of scanning mechanism rather than targeting my machine intentionally.**\n\n## Solution\n\nAs we are using the cluster as development environment, so we don't really want to spend much time on configuring the environment. Below there are two solutions that can help you quickly solve the issues.\n\n - Changing the default ports to something else. As the attack is a scanning attack, it is unlikely the hacker will try all the ports of the machine due to the cost.\n - Remove wget or curl software from your cluster. As the attack is running a bash script, they need to use wget, curl or other software to down the malware.\n - Don't expose the cluster to internet if it is not necessary\n\nObviously this won't defend all attacks in all scenarios, but it should be able to defend the scanning attacks.","excerpt":"As you probably remember, I built a Hadoop development environment as docker image with most of default settings, including default ports and credentials. The post is here Release Hadoop Cluster ......","path":"posts/how-to-secure-your-hadoop-development-environment-to-avoid-hackers.887b7bc5b27bb407c68268f1e207fdad.md"},{"title":"docker image - exec user process caused exec format error","metas":{"title":"docker image - exec user process caused exec format error","author":"sporule","date":"2020-04-26","categories":["docker"],"tags":["docker","bash","error","shebang"],"coverimage":"https://i.imgur.com/YpGscYR.png"},"content":"\n\n## The Problem\n\nI built a linux [dev box docker image](https://github.com/hao-hao-hao/dev-box) with some necessary run time environments such as go and python, but it didn't run and raised the error message **exec user process caused \"exec format error\"**.\n\n## The Cause\n\nI spent more than an hour to find the solution as nothing looks wrong for me. I have tried different docker image build options but no luck.\nAt the end, I was removing differnt parts of the Dockerfile to identify the problem.\n\nFinally I discovered the error message disappeared after I passing commands directly rather than using the **run.sh** in the DockerFile. \n\nSo the problem is actually from the **run.sh** file, and I forgot to put the [shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)).\n\n## The Solution\n\nPut the bash shebang at the beginning of the file and the problem is resolved, so simple.\n\n> Old \"run.sh\":\n> \n```bash\n# Start SSH\nservice ssh restart && bash\n\ntail -f /dev/null\n```\n\n> New \"run.sh\":\n\n```bash\n\n#!/bin/bash\n\n# Start SSH\nservice ssh restart && bash\n\ntail -f /dev/null\n\n```\n","excerpt":"I built a linux dev box docker image with some necessary run time environments such as go and python, but it didn't run and raised the error message exec user ......","path":"posts/docker-image-exec-user-process-caused-exec-format-error.43725176293d66ffdefa76b6661096ce.md"},{"title":"release hadoop cluster in docker","metas":{"title":"release hadoop cluster in docker","author":"sporule","date":"2020-04-18","categories":["big data"],"pinned":"1","tags":["hadoop","hive","spark","airflow"],"coverimage":"https://mapr.com/products/apache-hadoop/assets/hadoop-logo.png"},"content":"\n\n\nAfter going through so many erros such as [Spark errors](https://www.sporule.com/items/spark-on-yarn-error-failed-to-send-rpc) and [Hive errors](https://www.sporule.com/items/hive-unable-to-instantiate-metastore-client), finally I managed to get it working.\n\nThis is the Hadoop image based on the [BDE's Hadoop Base](https://github.com/big-data-europe/docker-hadoop) and its relevant forks.\n\nYou can find the latest documentation on [Big Data Cluster in Git](https://github.com/sporule/big-data-cluster), [Big Data Cluster in Docker Hub](https://hub.docker.com/repository/docker/sporule/big-data-cluster)\n\n## Quick Start\n\n### Run the whole cluster\n\n```bash\ndocker-compose up -d\n```\n\n### Run Individual Contaier\n\nYou can run individual container by using Docker command, please find more information and tutorial on Docker website. Please remember to pass environment variables to the Docker command. You can find the relevant environment variables in the *docker-compose.yml* file.\n\n\n## Containers in Docker-Compose\n\n| Nodes          | Amount |\n| -------------- | ------ |\n| Master         | 1      |\n| Worker         | 2      |\n| Hive-metastore | 1      |\n| Dev            | 1      |\n\n> You can flexibly change the amount of worker nodes and dev nodes, they will connect with master node automatically\n\n## Configurations\n\n### Hadoop and Hive Basic Configuration \nThe configuration parameters can be specified in the **hadoop.env** file or as environmental variables for specific services (e.g. master-node, worker-node etc.):\n```\n  CORE_CONF_fs_defaultFS=hdfs://master-node:8020\n```\n\nCORE_CONF corresponds to core-site.xml. fs_defaultFS=hdfs://master-node:8020 will be transformed into:\n```\n  <property><name>fs.defaultFS</name><value>hdfs://master-node:8020</value></property>\n```\nTo define dash inside a configuration parameter, use triple underscore, such as YARN_CONF_yarn_log___aggregation___enable=true (yarn-site.xml):\n```\n  <property><name>yarn.log-aggregation-enable</name><value>true</value></property>\n```\n\nThe available configurations are:\n* /etc/hadoop/core-site.xml CORE_CONF\n* /etc/hadoop/hdfs-site.xml HDFS_CONF\n* /etc/hadoop/yarn-site.xml YARN_CONF\n* /etc/hadoop/httpfs-site.xml HTTPFS_CONF\n* /etc/hadoop/kms-site.xml KMS_CONF\n* /etc/hadoop/mapred-site.xml  MAPRED_CONF\n* /opt/hive/conf/hive-site.xml HIVE_SITE_CONF\n  \n### Application On or Off Configuration\n\nYou can turn on or off some applications by using environment variables, **0** means on and **1** means off. You can update the environment variable in the **hadoop.env** file or inject it while starting the containers (through Docker command or docker-compose.yml). However, it is good to note that **hadoop.env** will have lower priority.","excerpt":"After going through so many erros such as Spark errors and Hive errors, finally I managed to get it working.\n\nThis is the Hadoop image based on the BDE's Hadoop Base ......","path":"posts/release-hadoop-cluster-in-docker.a4fde4f82d2843338af151a73c2996e1.md"},{"title":"hive - unable to instantiate meta store client ","metas":{"title":"hive - unable to instantiate meta store client ","author":"sporule","date":"2020/04/12","categories":["big data"],"tags":["hadoop","hive","metastore","docker"],"coverimage":"https://imgix.datadoghq.com/img/blog/hive/apache_hive_hero_final-01.png"},"content":"\n\n## Problem\n\nI use docker compose to build my Hadoop cluster, and Hive is one of the component. I received error message:\n\n```bash\n\nHiveException java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient\n\n```\n\n## Diagnose\n\nI started hive with a debug mode by using:\n\n```bash\nhive -hiveconf hive.root.logger=DEBUG,console\n```\n\nIt returns error message:\n\n```bash\n ERROR utils.MetaStoreUtils: Got exception: java.net.URISy\nntaxException Illegal character in hostname at index 37: thrift://hive-metastore.docker-hadoop_default:9083\n\nCaused by: MetaException(message:Got exception: java.net.URISyntaxException Illegal character in hostname at index 37: thrift://hive-metastore.docker-hadoop_default:9083)\n```\nIt looks like the system complained about the hostname  thrift://hive-metastore.docker-hadoop_default:9083.\nI did some Google and the system does not live the character \"_\"\n\n## Solution\n\nThe hostname was auto generated by Docker Compose, so I need to change the default name explicitly.\nDocker Compose use yml to config, what we need to do is to ensure we are using docker compose yml version 3.5 or above.\nYou can change the version by using:\n\n```bash\nversion: \"3.5\"\n```\n\nAnd then set default network by using:\n\n```bash\nnetworks:\n  default:\n     name: newnetworkname\n```\n\nAfter updating the yml file everything works fine now\n\n```bash\nHive Session ID = 5d4e4c64-dd7b-4c09-b000-7a2675d27ead\nHive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. spark, tez) or using Hive 1.X releases.\nhive> show databases;\nOK\ndefault\nTime taken: 1.021 seconds, Fetched: 1 row(s)\nhive>\n```","excerpt":"I use docker compose to build my Hadoop cluster, and Hive is one of the component. I received error message:\n\n```bash\n\nHiveException java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient\n\n```\n\n\n\nI started hive with a debug ......","path":"posts/hive-unable-to-instantiate-metastore-client.b93d6926360e8d2d8ff9b3851bf9463c.md"},{"title":"spark on yarn error - faild to send rpc ","metas":{"title":"spark on yarn error - faild to send rpc ","author":"sporule","date":"2020/04/05","categories":["big data"],"tags":["spark","hadoop","yarn","docker"],"coverimage":"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Apache_Spark_logo.svg/1920px-Apache_Spark_logo.svg.png"},"content":"\n\n\n## Problem\n\nI am new to the big data world, and I am trying to build a Hadoop cluster by using docker. The spark shell did not work with the error message below:\n\n\n```bash\n\nFailed to send RPC 4858956348523471318 to /10.20.42.194:54288: java.nio.channels.ClosedChannelException\n\ncluster.YarnSchedulerBackend$YarnSchedulerEndpoint: Sending RequestExecutors(0,0,Map()) to AM was unsuccessful\n\n```\n\n## Diagnose\n\nThe problem looks like it can't connect to the ip address, so I start with testing the connection between spark to the ip address.\nThe ping went through without problems.\n\nThen I look at yarn to see if I can find any logs there, I discovered the error messages below:\n\n```bash\n\nApplication application_1586040841405_0002 failed 2 times due to AM Container for appattempt_1586040841405_0002_000002 exited with exitCode: -103\nFailing this attempt.Diagnostics: [2020-04-04 22:56:04.466]Container [pid=648,containerID=container_e08_1586040841405_0002_02_000001] is running 71436800B beyond the 'VIRTUAL' memory limit. Current usage: 260.6 MB of 1 GB physical memory used; 2.2 GB of 2.1 GB virtual memory used. Killing container.\nDump of the process-tree for container_e08_1586040841405_0002_02_000001 :\n|- PID PPID PGRPID SESSID CMD_NAME USER_MODE_TIME(MILLIS) SYSTEM_TIME(MILLIS) VMEM_USAGE(BYTES) RSSMEM_USAGE(PAGES) FULL_CMD_LINE\n|- 657 648 648 648 (java) 598 146 2305732608 66012 /usr/lib/jvm/java-8-openjdk-amd64//bin/java -server -Xmx512m -Djava.io.tmpdir=/tmp/hadoop-root/nm-local-dir/usercache/root/appcache/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001/tmp -Dspark.yarn.app.container.log.dir=/opt/hadoop-3.1.1/logs/userlogs/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001 org.apache.spark.deploy.yarn.ExecutorLauncher --arg a7dc3af52bc9:37231 --properties-file /tmp/hadoop-root/nm-local-dir/usercache/root/appcache/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001/__spark_conf__/__spark_conf__.properties\n|- 648 646 648 648 (bash) 0 0 20561920 698 /bin/bash -c /usr/lib/jvm/java-8-openjdk-amd64//bin/java -server -Xmx512m -Djava.io.tmpdir=/tmp/hadoop-root/nm-local-dir/usercache/root/appcache/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001/tmp -Dspark.yarn.app.container.log.dir=/opt/hadoop-3.1.1/logs/userlogs/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001 org.apache.spark.deploy.yarn.ExecutorLauncher --arg 'a7dc3af52bc9:37231' --properties-file /tmp/hadoop-root/nm-local-dir/usercache/root/appcache/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001/__spark_conf__/__spark_conf__.properties 1> /opt/hadoop-3.1.1/logs/userlogs/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001/stdout 2> /opt/hadoop-3.1.1/logs/userlogs/application_1586040841405_0002/container_e08_1586040841405_0002_02_000001/stderr\n[2020-04-04 22:56:04.519]Container killed on request. Exit code is 143\n[2020-04-04 22:56:04.549]Container exited with a non-zero exit code 143.\nFor more detailed output, check the application tracking page: http://historyserver:8188/applicationhistory/app/application_1586040841405_0002 Then click on links to logs of each attempt.\n. Failing the application.\n\n```\n\nIt looks obvious that the job containers were killed because the virtual memory usage exceed the allocated virtual memory error message. As a result, I need to increased the virtual memory. \n\n## Solution\n\nI found out from official document that there is a property call **yarn.nodemanager.vmem-pmem-ratio** that controls the ratio between physical memory and virtual memory. This configuration is under **/etc/hadoop/yarn-site.xml**.\n\nThe default value is 2.1 so I have changed it to 10 because my Azure machine has only 8GB of RAM.\n\nI believe the side affect is the execution of job will be slower because it is using virtual memory, which sounds like the hard disks rather than the memory.\n\n","excerpt":"I am new to the big data world, and I am trying to build a Hadoop cluster by using docker. The spark shell did not work with the error message ......","path":"posts/spark-on-yarn-error-failed-to-send-rpc.bb1dae2f18c11ec5ca1ac15b4612f654.md"},{"title":"define output column in flask-sqlalchemy","metas":{"title":"define output column in flask-sqlalchemy","author":"sporule","date":"2019-11-24","categories":["code"],"tags":["flask","python","sqlalchemy","flask-sqlalchemy"],"coverimage":"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRilFX9Kg2VGgC02Fy6ILT5PKamAfygZnD6XsqahK4zwHY80M9f2w&s"},"content":"\n\n## The background\n\nI am writing a Web API in python for a general purpose CMS by using Flask + Flask - SqlAlchemy. It is very easy to use but it does not provide a native way to declare what should be the output colums. This function is very useful as I don't want to pass everything to the client.\n\n## What we want to achieve\n\nWe want to be able to output selected columns from a SQLAlchemy object as dictionary, the reason we are outputing it as dictionary is because Flask can't jsonify the SQLAlchemy Object directly.\n\n## Implementation\n\nIn Golang with MongoDB, it can set `json:\"-\"` to columns to omit columns that you don't want to output. In below example, the Password and TokenSalt will be omitted if we run a json export.\n\n```go\ntype User struct {\n    ID               bson.ObjectId          `bson:\"_id,omitempty\" json:\"_id,omitempty\"`\n    Email            string                 `bson:\"email,omitempty\" json:\"email,omitempty\"`\n\tPassword         string                 `bson:\"password,omitempty\" json:\"-\"`\n\tTokenSalt        string                 `bson:\"tokenSalt,omitempty\" json:\"-\"`\n\tCreatedDate      time.Time              `bson:\"createdDate,omitempty\" json:\"createdDate,omitempty\"`\n\tModifiedDate     time.Time              `bson:\"modeifiedDate,omitempty\" json:\"modeifiedDate,omitempty\"`\n}\n```\n\nI am trying to follow the same method in python but I don't know how to declare extra properties in the column, so I used a very simple way to do that by adding a property call output_column in python.\n\nFor example we have a User and Role class with Mixin class, please check SQLAlchemy documentation first if you are not familiar with it.\n\n> The old code:\n\n```python\n\nclass DBMixin():\n    id = db.Column(db.Integer, primary_key=True)\n    created_time = db.Column(db.DateTime, server_default=db.func.now())\n    modified_time = db.Column(\n        db.DateTime, server_default=db.func.now(), onupdate=db.func.now())\n\n    def insert(self):\n        db.session.add(self)\n        db.session.commit()\n\n    def delete(self):\n        db.session.delete(self)\n        db.session.commit()\n\n\nclass User(db.Model,DBMixin):\n    __tablename__ = 'user'\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(255), nullable=False)\n    role_id = db.Column(db.Integer, db.ForeignKey('role.id'),default = 1)\n    articles = db.relationship('Article', backref='user', lazy='dynamic')\n    orders = db.relationship('Order', backref='user', lazy='dynamic')\n\nclass Role(db.Model,DBMixin):\n    __tablename__ = 'role'\n    name = db.Column(db.String(50), unique=True, nullable=False)\n    users = db.relationship('User', backref='role', lazy='dynamic')\n\n    def __init__(self, name):\n        self.name = name\n\n```\n\n> The new code with output as dict:\n\n```python\n\nclass DBMixin():\n    id = db.Column(db.Integer, primary_key=True)\n    created_time = db.Column(db.DateTime, server_default=db.func.now())\n    modified_time = db.Column(\n        db.DateTime, server_default=db.func.now(), onupdate=db.func.now())\n    output_column = [] # Added output_column\n\n    def insert(self):\n        db.session.add(self)\n        db.session.commit()\n\n    def delete(self):\n        db.session.delete(self)\n        db.session.commit()\n\n    def as_dict(self, output_column=[]):\n        \"\"\"\n        Added as_dict function\n        \"\"\"\n        output = {}\n        # Use default self.output_column if output_column is empty\n        output_column = output_column if len(\n            output_column) > 0 else self.output_column\n        # Use all columns if self.output_column is empty\n        output_column = output_column if len(output_column) > 0 else [\n            c.name for c in self.__table__.columns]\n        for column in output_column:\n            column_list = column.split('.')\n            if len(column_list) > 1:\n                value  = self\n                for x in range(0,len(column_list)):\n                    # This is for to cope with the different level. For example I can output the role of the user by passing \"role.name\", it can be multiple level\n                    if hasattr(value,column_list[x]):\n                        value = getattr(value,column_list[x])\n                    else:\n                        value = ''\n                        break\n                output[column] = str(value)\n                continue\n            # Simple output if the column is in the class itself\n            output[column] = str(getattr(self, column))\n        return output\n\nclass User(db.Model,DBMixin):\n    __tablename__ = 'user'\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(255), nullable=False)\n    role_id = db.Column(db.Integer, db.ForeignKey('role.id'),default = 1)\n    articles = db.relationship('Article', backref='user', lazy='dynamic')\n    orders = db.relationship('Order', backref='user', lazy='dynamic')\n    output_columns = ['email','role.name']\n\nclass Role(db.Model,DBMixin):\n    __tablename__ = 'role'\n    name = db.Column(db.String(50), unique=True, nullable=False)\n    users = db.relationship('User', backref='role', lazy='dynamic')\n\n    def __init__(self, name):\n        self.name = name\n\n```\n\nAs you can see above, I have added an attribute `output_columns`.  This is to define the default output_columns. This can be overrided in the individual class, I have done that for User class.\n\nI have also added a function `as_dict`. It accepts on variable `output_columns` in case if different function want to override the default one. So the priority of the `output_columns` is:\n\n> `passed in to function` > `declared in the class` > `declared in the mixin class` > `all columns in the class`\n\nIt also supports multilevel output, for example we want to export both email address and the name of the User Role. What we need to do is simple put `'role.name'` inside the output_columns. I have added the specific `output_columns` in User class above, and below is the expected output after running the as_dict():\n\n\n```python\n[\n  {\n    \"email\": \"abc@gmail.com\", \n    \"role.name\": \"member\"\n  }, \n  {\n    \"email\": \"abcd@gmail.com\", \n    \"role.name\": \"admin\"\n  }\n]\n\n```","excerpt":"I am writing a Web API in python for a general purpose CMS by using Flask + Flask - SqlAlchemy. It is very easy to use but it does not ......","path":"posts/define-output-column-in-flask-sqlalchemy.b2f2b0946e6b36e5b2b3d017612c96ab.md"},{"title":"build an amazon alexa skills in 10 minutes and get free echo","metas":{"title":"build an amazon alexa skills in 10 minutes and get free echo","author":"sporule","date":"2019-10-20","categories":["code"],"tags":["amazon","echo","alexa"],"coverimage":"https://i.imgur.com/zt5JIa3.png"},"content":"\n\n## Background\n\nThis guide is going to show you how to build an Amazon Alexa Skills in 10 minutes by using python, aws and an information api.\n\nIn addition, Amazon is currently running a promotion for giving out Echo for free. In summary:\n\n- Publish your very first, new Alexa skill during the promotion period and earn an Amazon Echo Dot.\n- Publish three new Alexa skills during the promotion period, where one of them is used by at least 75 unique users during the promotion period, and earn an Echo Show 5 voucher.\n- Add the Alexa Presentation Language to one of your skills (newly published or updated) during the promotion period and reach at least 150 unique users during the promotion period, and you will earn an Amazon Echo Show.\n\nFind more details [here](https://developer.amazon.com/en-GB/alexa/alexa-skills-kit/alexa-developer-skill-promotion)\n\n\n## What is the final product look like\n\nTo see what the final product look like, you will need to download the Alexa app and enable the skill [**Joke Teller**](https://www.amazon.co.uk/dp/B07ZCVCK8F/ref=sr_1_3?keywords=joke+teller&qid=1571692557&s=digital-skills&sr=1-3)\n\n![20191021221611.png](https://i.imgur.com/zt5JIa3.png)\n\nTo Test it, simply say:\n\n- 'Alexa, ask joke teller to tell me a joke'\n- 'Alexa, ask joke teller to give me something fun'\n\nIt will return you a random joke.\n\n## Prerequisite Knowledge\n\n- Good understand on English\n- Good knowledge on using a web browser (Chrome, Safari or Firefox)\n\n## Guideline\n\n### Pick an API you want to use\n\nGo through the API list in [this link](https://www.programmableweb.com/category/humor/api), I will suggest to start from a simple api that returns a sequence.\nI have picked the [icanhazdadjoke](https://icanhazdadjoke.com/api) api which will randomly return a joke, so my app name will be joke teller.\n\n### Register an Amazon developer account\n\nClick [this link](https://developer.amazon.com/alexa/console/ask) for registration, fill in required information.\nYou can use your Amazon account to log in.\n\n### Register to the Amazon Free Echo Promotion\n\nGo to [here](https://developer.amazon.com/en-GB/alexa/alexa-skills-kit/alexa-developer-skill-promotion) and fill the promotion form.\n\n### Create your first skill\n\nAfter login to your development account ,go to [this link](https://developer.amazon.com/alexa/console/ask).\n\nYou will see something like this, click Create Skill:\n\n![20191021213921.png](https://i.imgur.com/B6dOjzA.png)\n\nFill in the required information:\n- The name of your skill\n- Use Custom Model to build the skill\n- Use Alexa-Hosted(Python) as backend resources which is free in the AWS\n\n![20191021214205.png](https://i.imgur.com/6GQvQ5f.png)\n\nNow you need to set up your Invocation name, which is the name that will active your skill. The name I used here is \"joke teller\"\n\n![20191021215011.png](https://i.imgur.com/IzYaZ1K.png)\n\nAfter setting the Invocation name, we will need to set up the Intent. Add a new intent with a name. I used the name joke. Intent is something that will response the user's query. As we are only building a simple skill, so we only have one intent without any slots. Examples intent:\n\n- Give me some fun\n- Make me laugh\n\n![20191021215141.png](https://i.imgur.com/xjre1Ol.png)\n\nAfter adding few intents, you need to click save model and then build model.\n\n![20191021215637.png](https://i.imgur.com/P06svRf.png)\n\nCongratulations, you are almost there.\n\nNow go to Code section -> Open lambda_function, and copy and paste below code to an empty space, change the \"joke\" to the name of  your intent:\n\n```python\nclass jokeIntentHandler(AbstractRequestHandler):\n    \"\"\"Handler for shouldI.\"\"\"\n    def can_handle(self, handler_input):\n        # type: (HandlerInput) -> bool\n        return ask_utils.is_intent_name(\"joke\")(handler_input)\n\n    def handle(self, handler_input):\n        # type: (HandlerInput) -> Response\n        speak_output =  requests.get(\"https://icanhazdadjoke.com/\", headers={\"Accept\":\"text/plain\"}).text\n        return (\n            handler_input.response_builder\n                .speak(speak_output)\n                # .ask(\"add a reprompt if you want to keep the session open for the user to respond\")\n                .response\n        )\n```\n\nThis code basically returns a random joke by calling the joke api we just pciked.\n\n![20191021215925.png](https://i.imgur.com/0EV8K5S.png)\n\nIt is also worth changing any wording you want to change, I believe you can understand this easily.\n\n![20191021220236.png](https://i.imgur.com/X4WCsZF.png)\n\nFinally, add below code at the end of the section, then click Save and Deploy\n\n```python\n\nsb.add_request_handler(jokeIntentHandler())\n\n```\n\n![20191021220407.png](https://i.imgur.com/FSMwb8V.png)\n\n\nYou can now test your skill in the test tab to make sure it works.\nIn my scenario, I can say:\n\n> \"ask joke teller to make me laugh\"\n\n![20191021220729.png](https://i.imgur.com/Bv6xBge.png)\n\n\n### Publish Your Skill\n\nNow we can start to publish our skill, go to distribution and fill the basic information.\n\n![20191021220849.png](https://i.imgur.com/MvyIGkN.png)\n\nOne thing needs to be careful is the Example Phrases, you will need to make sure the example phrases are in your intent. For example if your intents are:\n\n- Give me some fun\n- Make me laugh\n\nThen your example phrases can be one or both of below:\n\n- Alexa, ask joke teller to make me laugh\n- Alexa, ask joke teller to make me laugh\n\nSave and Continue when everything is ready, you will also need to fill in both Privacy Section and Availability.\n\nPlease use the same example phrases as testing instructions in Privacy Section.\n\n![20191021221836.png](https://i.imgur.com/x7R431B.png)\n\nGo to Certification after completing the whole distribution section, Run both Validation Test and Functional test to make sure everything is OK.\n\n![20191021221247.png](https://i.imgur.com/MLCblI5.png)\n\nAnd then go to Submission to Submit the skill, you skill will be in the Alexa Skill store after few days.\n\n![20191021221330.png](https://i.imgur.com/tWJqbt1.png)\n\n## Summary\n\nAs you can see it is very simple to create the simple skill, you can be flexible on any of the API to make your skill more fun. According to the terms, you will receive your echo dot in 60 days.\n","excerpt":"This guide is going to show you how to build an Amazon Alexa Skills in 10 minutes by using python, aws and an information api.\n\nIn addition, Amazon is currently running ......","path":"posts/build-an-amazon-alexa-skills-in-10-minutes-and-get-free-echo.14ef8dc8991ce08965e1614040f0a6bc.md"},{"title":"release the first version of sporule blogging system","metas":{"title":"release the first version of sporule blogging system","author":"sporule","date":"2019-10-05","categories":["code"],"pinned":"1","tags":["npm","javascript","es6","markdown","sporule","blog"],"coverimage":"https://i.imgur.com/CRKGEJk.png"},"content":"\n\n\n## Background\n\nThis is the pure front end system I mentioned in my previous posts, although it is not perfect yet, but I still want to release it out because the core functionality is ready.\n\n## Features\n\n- Easy to use, create your blog in less than 10 minutes.\n- Pure front end + Markdown, no server side code.\n- Multi-platform support - github pages, netlify and any other cloud platform.\n- Progressive Web App Support Ready, it can be added to iPhone or Android as an app. All posts can be cahced.\n- Theme system which means you can switch to the themes you like through github submodules.\n- Seperating the site and the content as it renders the markdown on the fly.\n- Rich meta data through Front Matter.\n\n## Quick Start - Set up\n\n### Fork This Repo to your GitHub Account\n\n![Fork](https://i.imgur.com/VSqrEHf.png)\n\n### Update the Configuration Files\n\n#### General Configuration File\n\n_config.js is the configuration file for your site.\n\n![Config](https://i.imgur.com/9Rl3J3B.png)\n\n**Available Configs:**\n\n| Name              | Value                                                                                               | Example                           | Type    |\n| ----------------- | --------------------------------------------------------------------------------------------------- | --------------------------------- | ------- |\n| Site              | The name of the site                                                                                | \"Sporule\"                         | string  |\n| url               | The link to your site                                                                               | \"https://www.sporule.com\"         | string  |\n| description       | short description about your site                                                                   | \"Sporule is a micro blog system\"  | string  |\n| keywords          | keywords for SEO purpose                                                                            | \"blog,post\"                       | string  |\n| logo              | The logo                                                                                            | \"https://i.imgur.com/MrRLOC4.png\" | string  |\n| disqusShortname   | Disqus is a comment system, you will get a shortname after having an account with them              | NA                                | string  |\n| postPerPage       | How many posts do you want to show per page?                                                        | 8                                 | int     |\n| googleAnaltics    | Google Analytics Tag if you are using Google analytics                                              | UA-11402457-1                     | string  |\n| alwaysRefreshPost | The system will always get the latest content of the post rather than using the cache if it is true | false                             | boolean |\n| gh_custom_domain  | Put this to true if you are using github pages with custom domain                                   | false                             | boolean |\n\n#### Theme Configurations\n\nThese configuration will be used for that specific theme only, they are located under templates/_templateConfig.js. Look at the theme documentation to understand what is available.\n\n![TemplateConfig](https://i.imgur.com/mVoIG2w.png)\n\n## Quick Start - Your Content\n\nPut all your markdown files under the post folder, you will need to put the meta data in the front matter, see an example below.\n\n![Example Markdown](https://i.imgur.com/Jqodi7S.png)\n\n## Quick Start - Deployment Set up Option 1 - Github Page\n\n### What is Github Page\n\nThis [link](https://pages.github.com/) gives you all you need to know about github page.\n\n### Sign Up for GitHub Action\n\nThe link is: [GitHub Action](https://github.com/features/actions)\n\n![GitHub Action](https://i.imgur.com/KRIawwK.png)\n\n### Enable Github Action in your Forked Repo\n\n![GitHub Action](https://i.imgur.com/CO0ISQk.png)\n\nClick Actions and look at the terms before click agreement.\n\n### Set up the deployment key for GitHub Action\n\n- Generate RSA public and private key pairs by using your usual software, otherwise you can generate it online. I randomly searched one in google, [click here](https://8gwifi.org/sshfunctions.jsp)\n- It should be RSA key and the size is 2048.\n\n![RSA Key Generator](https://i.imgur.com/EbjIUXZ.png)\n\n- Go to your repo settings, add a new deploy key by coping the public key we generated.\n\n![Deploy Key](https://i.imgur.com/gVKjFti.png)\n\n- Go to secrets, add a new secret by coping the private key we generated. The name of the secret must be  **ACTIONS_DEPLOY_KEY** as this is what we have in our github action.\n\n![Secret](https://i.imgur.com/KmxsoWD.png)\n\n### Update the CNAME file if you are using custom domain in Github Pages\n\nThe CNAME file is under gh-pages/, add your custom domain to the CNAME file. Leave CNAME as empty if you are using the default github pages domain.\n\n![Example CNAME](https://i.imgur.com/I6iJPst.png)\n\n### End of Github Pages Deployment Set Up\n\nYou blog will get updated automatically everytime you make any changes in your git repo.\n\n## Demo\n\n[Sporule](https://www.sporule.com)\n\n[EatSomeMore](https://www.eatsomemore.com)\n\n## To Do List\n\n- [ ] Add Documentation about deploying to Netlify and other platforms\n- [ ] Add Documentation on how to use custom pages\n- [ ] Add Unit Testing to the core part of the system\n- [ ] Find a way to pull all the paths of markdown files from Github\n- [ ] Support other comment system rather than disqus\n- [ ] Improve the SEO settings\n- [ ] Optimise the template system","excerpt":"This is the pure front end system I mentioned in my previous posts, although it is not perfect yet, but I still want to release it out because the core ......","path":"posts/released-first-version-of-sporule-blog-system.876b74027735ed065b4588fe464756e9.md"},{"title":"release the first version of markdown-handler","metas":{"title":"release the first version of markdown-handler","author":"sporule","date":"2019-09-22","categories":["code"],"tags":["npm","javascript","es6","markdown"],"coverimage":"https://i.imgur.com/xkhBTzk.png"},"content":"\n\n## Background\n\nI am building a micro blog system because I don't really like the concept of static site generator, I believe the content of the site should be dynamic because I don't really want to rebuild the site again and again.\nMarkdown-handler loads the markdown files on the fly through javascript and generate meta datas such as coverimage, thumbnail etc..\n\n## Markdown Handler Details\n\n[![Build Status](https://travis-ci.org/sporule/markdown-handler.svg?branch=master)](https://travis-ci.org/sporule/markdown-handler)\n[![NPM version](https://img.shields.io/npm/v/markdown-handler.svg?style=flat)](https://www.npmjs.org/package/markdown-handler)\n![Dependencies](https://img.shields.io/david/sporule/markdown-handler)\n[![Coverage Status](https://coveralls.io/repos/github/sporule/markdown-handler/badge.svg?branch=master)](https://coveralls.io/github/sporule/markdown-handler?branch=master)\n\n> Mini utility to help you load your markdown files by using the paths to .md files.\n\n### Features\n\n- Reads markdown contents by using the paths without pre-build.\n- Provide  search functionality by using [Fuse.js](https://fusejs.io/).\n- Provides some basic meta data such as tags, categories, date, coverimage but it is flexible to configure.\n\n### Installation\n\nNode.js\n\n```bash\nnpm install markdown-handler\n```\n\n### Usage Example (ES6)\n\n```javascript\nimport MarkdownHandler from 'markdown-handler';\n\nlet mdHandler = new MarkdownHandler();\n\nvar paths = [\n        \"https://sporule.com/1.md\",\n        \"https://sporule.com/2.md\",\n        \"https://sporule.com/3.md\"\n]\n\nmdHandler.loadMds(paths).then(posts => {\n          console.log(posts);\n          //To Search from markdowns\n          posts.searchIndex(\"title to search\");\n});\n\n\n```\n\n### One of the example markdown files\n\n```javascript\n\n---\ntitle: \"This is another Demo Post\" \nauthor: \"Sporule\"\ndate: \"2019-09-10\"\ncategories: \"Another Demo\"\ntags: \"tagA,tagD\"\ncoverImage: \"https://i.imgur.com/GzmpA4s.png\"\n---\n\n# Paragraph 1\nLorem ipsum dolor sit amet, nullam putent deserunt mel no, cum periculis intellegebat ne. Noluisse voluptatibus id sed, iudico essent ius et. In mutat mucius probatus eum. Has cu iusto audiam quaeque. Ad idque essent mei.\n\nMel solet aperiri similique id, ei mutat essent cotidieque eam, tempor ancillae pri te. Est at utroque explicari, eam comprehensam mediocritatem eu. Duis quodsi commune id cum, et eum noluisse consequuntur. Tation nullam conclusionemque mel in, nec volutpat splendide ad, nec ne persecuti intellegebat. Sed antiopam maiestatis rationibus no. Vocibus appetere mea an, no vix habeo dicant probatus.\n\n```\n\n### Output structure\n\n```javascript\nposts:\n  {\n    \"items\": [\n      {\n        \"title\": \"\",\n        \"content\": \"\",\n        \"excerpt\": \"\",\n        \"path\": \"\",\n        \"metas\": {\n          \"categories\": [],\n          \"tags\": [],\n          \"title\": \"\",\n          \"date\": \"\",\n          \"coverimage\": \"\"\n        }\n      }\n    ],\n    searchIndex: {}\n  }\n```\n\n### Configurations\n\n| Variable         | Default                                                              | Type         | Note                                                                                   |\n| ---------------- | -------------------------------------------------------------------- | ------------ | -------------------------------------------------------------------------------------- |\n| excerptLength    | `30`                                                                 | integer      | The length of excerpt, excerpt will be generated from the markdown files               |\n| defaultThumbnail | `https://i.imgur.com/GzmpA4s.png`                                    | string       | The default thumbnail if there is no image in markdown file                            |\n| mustHaveMetas    | `[\"title\", \"categories\", \"tags\", \"date\"]`                            | string array | This are the must have metas at the beginning of the markdown file                     |\n| excerptParser    | take the set length from the markdown file                           | function     | Input is the markdown file and the length of the excerpt, output is the excerpt string |\n| thumbnailParser  | take the first image from markdown file as thumbnail                 | function     | Input is the markdown file, output is the thumbnail string                             |\n| getSearchIndex   | This is to build the search index by using Fuse, search key is title | function     | Input is the post processed markdown items, output is the fuse search object           |\n\n### Meta Data\n\nAll meta data between at the beginning of the document will be loaded into the item object, for example if you want the color attribute in meta data, you shoud have the markdown files look like:\n\n```javascript\n\n---\ntitle: \"This is another Demo Post\" \nauthor: \"Sporule\"\ndate: \"2019-09-10\"\ncategories: \"Another Demo\"\ntags: \"tagA,tagD\"\ncoverImage: \"https://i.imgur.com/GzmpA4s.png\"\ncolor:\"pink\"\n---\n\n# Paragraph 1\nLorem ipsum dolor sit amet, nullam putent deserunt mel no, cum periculis intellegebat ne. Noluisse voluptatibus id sed, iudico essent ius et. In mutat mucius probatus eum. Has cu iusto audiam quaeque. Ad idque essent mei.\n\nMel solet aperiri similique id, ei mutat essent cotidieque eam, tempor ancillae pri te. Est at utroque explicari, eam comprehensam mediocritatem eu. Duis quodsi commune id cum, et eum noluisse consequuntur. Tation nullam conclusionemque mel in, nec volutpat splendide ad, nec ne persecuti intellegebat. Sed antiopam maiestatis rationibus no. Vocibus appetere mea an, no vix habeo dicant probatus.\n\n```\n\n### Example Implementation of the Code\n\n[Sporule](https://github.com/sporule/sporule) : A micro blog system that uses markdown-handler\n\n## Markdown-Handler Github Page\n\n[Markdown-Handler](https://github.com/sporule/markdown-handler)","excerpt":"I am building a micro blog system because I don't really like the concept of static site generator, I believe the content of the site should be dynamic because I ......","path":"posts/released-first-version-of-markdown-handler.9f140f40f8761e6316c819b31df98466.md"},{"title":"generate vocabulary and tokenises sequences by using keras.preprocessing","metas":{"title":"generate vocabulary and tokenises sequences by using keras.preprocessing","author":"sporule","date":"2019-09-18","categories":["machine learning"],"tags":["keras","tokenizer","vocabulary"],"coverimage":"https://miro.medium.com/max/1000/1*LkKz4wtZNBo5i-Vc8DWhTA.png"},"content":"\n\n## Backgrounds\n\nI found that it is very straightforward to generate the vocab by using keras, however the examples on their website is not very straightforward.\n\nThe example below is read a QA Data Set from csv file, and then generate a vocab by using the `keras.preprocessing` library.\n\nStart with loading the data\n\n```python\nimport pandas as pd \nqa_df = pd.read_csv(\"python_qa.csv\",encode = \"ISO-8859-1\",sep='\\t')\n```\n\nThe data format\n\n  |     | Question                                          | Answer                                            |\n  | --- | ------------------------------------------------- | ------------------------------------------------- |\n  | 0   | How can I find the full path to a font from it... | Unfortunately the only API that isn't deprecat... |\n  | 1   | Get a preview JPEG of a PDF on Windows? I have... | ImageMagick delegates the PDF->bitmap conversi... |\n  | 2   | Continuous Integration System for a Python Cod... | One possibility is Hudson. It's written in Ja...  |\n  | 3   | cx_Oracle: How do I iterate over a result set?... | The canonical way is to use the built-in curs     |\n  | 4   | Using 'in' to match an attribute of Python obj... | Using a list comprehension would build a tempo... |\n\nThe function to generate the vocab\n\n```python\nfrom keras.preprocessing import text,sequence\n\n#util function\ndef generate_vocab(x,y,max_seq_length,batch_size):\n    #create vocab base on x and y\n    vocab = text.Tokenizer(lower=True, split=' ', oov_token='<UNK>',char_level=False, document_count=0)\n    vocab.fit_on_texts(x)\n    vocab.fit_on_texts(y)\n    #tokenise x and y\n    x_seqs = vocab.texts_to_sequences(x)\n    y_seqs = vocab.texts_to_sequences(y)\n    #pad seqs to the max length, truncate the words that outside the max length\n    x_seqs = sequence.pad_sequences(x_seqs,padding='post',truncating='post',maxlen=max_seq_length)\n    y_seqs = sequence.pad_sequences(y_seqs,padding='post',truncating='post',maxlen=max_seq_length)\n    #generate dataset for network to consume with batch\n    xy_set = tf.data.Dataset.from_tensor_slices((x_seqs, y_seqs)).batch(batch_size, drop_remainder=True)\n    return vocab,x_seqs,y_seqs,xy_set\n```\n\nOr you can generate two vocab for x and y\n\n```python\ndef generate_vocab(x,y,max_seq_length,batch_sz,vocab_length):\n    #create vocab base on x and y\n    x_vocab = text.Tokenizer(num_words=vocab_length,lower=True,filters='!\"#$%&()*+,-./:;=?@[\\\\]^_`{|}~\\t\\n', split=' ', oov_token=UNK,char_level=False, document_count=0)\n    x_vocab.fit_on_texts(x)\n    y_vocab = text.Tokenizer(num_words=vocab_length,lower=True, filters='!\"#$%&()*+,-./:;=?@[\\\\]^_`{|}~\\t\\n',split=' ', oov_token=UNK,char_level=False, document_count=0)\n    y_vocab.fit_on_texts(y)\n    #tokenise x and y\n    x_seqs = x_vocab.texts_to_sequences(x)\n    y_seqs = y_vocab.texts_to_sequences(y)\n    #pad seqs to the max length, truncate the words that outside the max length\n    x_seqs = sequence.pad_sequences(x_seqs,padding='post',truncating='post',maxlen=max_seq_length)\n    y_seqs = sequence.pad_sequences(y_seqs,padding='post',truncating='post',maxlen=max_seq_length)\n    #generate dataset for network to consume with batch\n    xy_set = tf.data.Dataset.from_tensor_slices((x_seqs, y_seqs)).batch(batch_sz, drop_remainder=True)\n    return x_vocab,y_vocab,x_seqs,y_seqs,xy_set\n```\n\nGenerate the vocab by using the function we just wrote\n\n```python\nMAX_SEQ_LENGTH=20\nBATCH_SIZE = 8\nvocab,q_seqs,a_seqs,qa_set = generate_vocab(qa_df['Question'],qa_df['Answer'],MAX_SEQ_LENGTH,BATCH_SIZE)\n```\n\nVocab is the overall vocab, q_seqs and a_seqs are the tokenised questions and aswers.\n\nYou can find more information on [https://keras.io/preprocessing/text/](https://keras.io/preprocessing/text/)\n","excerpt":"I found that it is very straightforward to generate the vocab by using keras, however the examples on their website is not very straightforward.\n\nThe example below is read a QA ......","path":"posts/generate-vocabulary-and-tokenises-sequences-by-using-keras.preprocessing.61011d5a5d7ce90f8e28303092cfbb91.md"},{"title":"use apache mxnet deep learning framework on kaggle's free gpu","metas":{"title":"use apache mxnet deep learning framework on kaggle's free gpu","author":"sporule","date":"2019-09-05","categories":["machine learning"],"tags":["mxnet","kaggle","gpu","cuda"],"coverimage":"https://miro.medium.com/max/668/1*GZrTyTz0OKMbxnO5Trhcew.png"},"content":"\n\n## Backgrounds\n\nThe default MXNet installed in Kaggle's python container is 1.3.1 rather than the CUDA version of MXNet.\n\nSo what we need do is simply uninstalled the current MXNet and install the CUDA version of MXNet.\n\n## How to\n\nTo start with, turn on the GPU option and internet option on your Kaggle Kernel(Notebook)\n[kaggle](https://i.imgur.com/fX2m8vV.png)\n\nThen open the console and run:\n\n```bash\n!nvcc --version\n```\n\nThe current version of CUDA is 9.1:\n[cuda](https://i.imgur.com/UFJuXYM.png)\n\nThen what we need to do is to uninstall the current MXNet and then reinstall the mxnet-cu<<Version>>, in this case is mxnet-cu91.  We reinstalled numpy because of the version requirements from mxnet-cu91\n\n```bash\n!pip uninstall -y mxnet\n!pip install 'numpy<1.15.0,>=1.8.2' mxnet-cu91\n```\n\nEverything should work properly now.\nFollow MXNet's guide on how to use GPU for data training.\n","excerpt":"The default MXNet installed in Kaggle's python container is 1.3.1 rather than the CUDA version of MXNet.\n\nSo what we need do is simply uninstalled the current MXNet and install the ......","path":"posts/use-apache-mxnet-deep-learning-framework-on-kaggle-s-free-gpu.2a78083ae12cf76664b2549a577fb9ff.md"},{"title":"using pyenv and virtualenv in linux, and install jupyter lab","metas":{"title":"using pyenv and virtualenv in linux, and install jupyter lab","author":"sporule","date":"2019-08-18","categories":["notes"],"tags":["pyenv","jupyter lab","python","virtualenv"],"coverimage":"https://i.imgur.com/sHZq6hn.png"},"content":"\n\n## Backgrounds\n\npyenv is a simple python version management package, it allows you to install different version of python in your machine.\n\npyenv-virtualenv is a plugin for pyenv to use virutal python environment in your machine.\n\nThis package is very useful as you can simply switch python environment as well as build the live environment in your PC without impacting the master version of python.\n\n## How to\n\nPyenv provided an automatic script for installation from their Git.\n\nOpen terminal, type below command:\n\n```bash\ncurl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash\n```\n\nAbove script will install pyenv to your environment, then add the pyenv bin to the PATH:\n\n```bash\nexport PATH=\"~/.pyenv/bin:$PATH\" \neval \"$(pyenv init -)\" \neval \"$(pyenv virtualenv-init -)\"\n```\n\nAdd above three lines to the end of your `~\\.bashrc` if you want it to add pyenv to the PATH automatically after restart.\n\nBefore installing a new version of python, I will suggest you to install build dependencies before installing other python versions to avoid compiling errors.\n\nRun below to install all dependencies:\n\n```bash\nsudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \\\nlibreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\\nxz-utils tk-dev libffi-dev liblzma-dev\n```\n\nNow you can start to install different python version, I am using the 3.6.0:\n\n```bash\npyenv install 3.6.0\n```\n\nAfter having the 3.6.0 version of python installed, I can now create virtual environment base on the 3.6.0. I am creating this environment for jupyter lab so I named in jupyter_3.6\n\n```bash\npyenv virtualenv 3.6.0 jupyter_3.6\n```\n\nNow we can activate the virtual environment by using:\n\n```bash\npyenv activate jupyter_3.6\n```\n\nYou can see that the environment switched to the environment we just created. The python bin and pip bin is now pointed to pyenv folder.\n![pyenv](https://i.imgur.com/sHZq6hn.png)\n\nI suggest to upgrade pip before installing any packages:\n\n```bash\npip install --upgrade pip\n```\n\nNow you can start to install what ever pacakges are required for your environment, we are setting up this environment for jupyter lab, so I will install jupyter lab\n\n```bash\npip install jupyterlab\n```\n\nIf you want to exit the environment then use deactivate\n\n```bash\npyenv deactivate\n```\n\nAll above information is available in [pyenv's github](https://github.com/pyenv/pyenv), what I did is providing a summary to save the time.\n","excerpt":"pyenv is a simple python version management package, it allows you to install different version of python in your machine.\n\npyenv-virtualenv is a plugin for pyenv to use virutal python environment ......","path":"posts/using-pyenv-and-virtualenv-in-linux--and-install-jupyter-lab.8fc0b6f90d882f397a4f1e23d724ba97.md"},{"title":"set up hortonworks data platform in azure","metas":{"title":"set up hortonworks data platform in azure","author":"sporule","date":"","categories":["code"],"tags":["hadoop"],"coverimage":"https://i.imgur.com/GzmpA4s.png"},"content":"\n\n## Preparation\n\n\n### Open POrt 8080\n\n\n### ​Maximum Open Files Requirements\n\n> The recommended maximum number of open [**file descriptors**](https://en.wikipedia.org/wiki/File_descriptor) is 10000, or more. To check the current value set for the maximum number of open file descriptors, execute the following shell commands on each host:\n\n```bash\nulimit -Sn\n\nulimit -Hn\n\nIf the output is not greater than 10000, run the following command to set it to a suitable default:\n\nulimit -n 10000\n```\n\nIt does not work for me as I got the error message:\n\n```bash\n-bash: ulimit: open files: cannot modify limit: Operation not permitted\n```\n\nIf your account is \"accountA\", the solution is (I am using **CentOS 7**):\n\n- modify  /etc/systemd/system.conf and  /etc/systemd/user.conf, update\n\n```bash\nDefaultLimitNOFILE=10000\n```\n\n- modify  /etc/security/limits.conf, add following lines at the end\n\n```bash\naccountA hard nofile 10000\naccountA soft nofile 10000\n```\n\nyou can also use * to enable this for all accounts\n\n```bash\n* hard nofile 10000\n* soft nofile 10000\n```\n\nif you are using root account, you need to explicity say root\n\n```bash\nroot hard nofile 10000\nroot soft nofile 10000\n```\n\nCredit to [mkasberg](https://superuser.com/users/164984/mkasberg)\n\n### ​Set Up SSH Between Nodes\n\nUse Root Accounts \n\n> sudo su\n\nin master:\nmkdir /root/.ssh;  chmod 700 /root/.ssh;\n\nalso add new file id_rsa, and paste the private key to the /root/.ssh\n\nchmod 600 /root/.ssh/id_rsa\n\nin slaves:\ncp -R /home/sporule/.ssh /root/;  chmod 700 /root/.ssh;  chmod 600 /root/.ssh/authorized_keys\n\n\n### ​Disable SELinux and PackageKit and check the umask Value\n\nset SELINUX=disabled in /etc/selinux/config\n\nPermanently changing the umask for all interactive users:\n\nchange umask to 022\n\n\n### Install Open JDK 1.8\n\n> yum install java-1.8.0-openjdk-devel\n\n### Enable NTP\nyum install -y ntp\nsystemctl enable ntpd\n\n### hostname setup on every node\n\nget host name\n\n\nhostname -f\nmaster.3xnxh3rxoieefdkcqfgjoegn3e.zx.internal.cloudapp.net\nmaster2.3xnxh3rxoieefdkcqfgjoegn3e.zx.internal.cloudapp.net\nslave1.3xnxh3rxoieefdkcqfgjoegn3e.zx.internal.cloudapp.net\n\n-----------------\n\ndatahub-master.uksouth.cloudapp.azure.com\ndatahub-slave1.uksouth.cloudapp.azure.com\n\n\n\nhostname slave1.3xnxh3rxoieefdkcqfgjoegn3e.zx.internal.cloudapp.net\n\nvim /etc/hosts\n1.2.3.4 <fully.qualified.domain.name>\n\nvim /etc/sysconfig/network\n\nNETWORKING=yes\nHOSTNAME=<fully.qualified.domain.name>\n\n### Ambari setup in master\n\nprepare ambari repo\n\nhttps://docs.cloudera.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/download_the_ambari_repo_lnx7.html\n\nwget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.7.3.0/ambari.repo -O /etc/yum.repos.d/ambari.repo\n\n> yum install ambari-server\n\n\nmanually set up jdk\n\n> ambari-server setup -j /usr/lib/jvm/java-1.8.0-openjdk\n\nhttps://docs.cloudera.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/set_up_the_ambari_server.html\n\n\n\n### Install MySQL\n\nhttps://docs.cloudera.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/install-mysql.html\n\n\n```bash\n\nyum install mysql-connector-java* \nsudo ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar\n\n\nyum localinstall \\\n\nhttps://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm\n\nyum install mysql-community-server\n\nsystemctl start mysqld.service\n\nObtain the randomly generated MySQL root password.\n\ngrep 'A temporary password is generated for root@localhost' \\\n/var/log/mysqld.log |tail -1\nReset the MySQL root password. Enter the following command. You are prompted for the password you obtained in the previous step. MySQL then asks you to change the password.\n\n/usr/bin/mysql_secure_installation\n\n!Q2w3e4r\n\n```\n\n## Config for Ranger and OZZIE\n\nhttps://docs.cloudera.com/HDPDocuments/Ambari-2.7.3.0/bk_ambari-installation/content/configuring_mysql_for_ranger.html\n\nhttps://mapr.com/docs/60/Oozie/MySQLDataStoreforOozie.html\n\n\nCREATE USER 'rangerdba'@'localhost' IDENTIFIED BY 'edmung9Z!';\n\nGRANT ALL PRIVILEGES ON *.* TO 'rangerdba'@'localhost';\n\nCREATE USER 'rangerdba'@'%' IDENTIFIED BY 'edmung9Z!';\n\nGRANT ALL PRIVILEGES ON *.* TO 'rangerdba'@'%';\n\nGRANT ALL PRIVILEGES ON *.* TO 'rangerdba'@'localhost' WITH GRANT OPTION;\n\nGRANT ALL PRIVILEGES ON *.* TO 'rangerdba'@'%' WITH GRANT OPTION;\n\nFLUSH PRIVILEGES;\n\n\n### Start Ambari\n\n\nambari-server start\n\n### enable all ports\n8080, 8440, 8441\n\n\n### Installation\n\nhttp://sporule-master.uksouth.cloudapp.azure.com:8080/#/installer/step3\n\nDetail Logs\n\n/var/log/ambari-agent/ambari-agent.log\n\n\n### Update Zookeeper Config on all nodes\n\nzookeeper Cannot assign requested address bind failed\n\n/etc/zookeeper/conf/zoo.cfg\n\nserver.1 to 0.0.0.0\n\n\n\n\n","excerpt":"> The recommended maximum number of open file descriptors is 10000, or more. To check the current value set for the maximum number of open file descriptors, execute the following ......","path":"posts/set-up-hortonworks-data-platform-in-azure.714273af31cffe9b70a60a96968c9bb5.md"},{"title":"manually set storage folder for android apps that run in archon (chrome)","metas":{"title":"manually set storage folder for android apps that run in archon (chrome)","author":"sporule","date":"2019-08-01","categories":["notes"],"tags":["cors","cors-anywhere","pwa","heroku"],"coverimage":"https://techdissected.com/wp-content/uploads/2015/04/Archon-Custom-Runtime-1920x500.jpg"},"content":"\n\n## Backgrounds\n\nARChon is a very useful software where allows users to run android application in Chrome.\n\nHowever, you will need to set the external storage permission for the apk to specify the storage location for the Android app.\n\nThis is extremly useful when you are trying to use the video or music app to cache content.\n\n## Implementation\n\nIt is very easy to do it, what you need to do is to change the manifest.json file in the apk package.\n\nI am using Deepin LInux system, the apps folder are in\n\n```bash\n/lastore/apps/\n```\n\nFind below two entries(enableExternalDirectory and fileSystem) and ensure they look like below:\n\n```bash\n\"enableExternalDirectory\": true,\n\"fileSystem\": [\n        \"write\",\"directory\"\n      ]\n```\n\nThat is it, so simple. You will get a pop up folder selector when you open your ARChon Apps.\n\n## Credit\n\n[Github Q&A](https://github.com/vladikoff/chromeos-apk/issues/199)\n","excerpt":"ARChon is a very useful software where allows users to run android application in Chrome.\n\nHowever, you will need to set the external storage permission for the apk to specify the ......","path":"posts/manually-set-storage-folder-for-android-apps-that-run-in-archon-chrome.f9a31a1a0b4c06d4c2646fab7a9f2a29.md"},{"title":"solutions for cross origin request security (cors) in pwa (progressive web apps)","metas":{"title":"solutions for cross origin request security (cors) in pwa (progressive web apps)","author":"sporule","date":"2019-07-23","categories":["code"],"tags":["cors","cors-anywhere","pwa","heroku"],"coverimage":"https://i.imgur.com/IVXFYbt.png"},"content":"\n\n## Backgrounds\n\nI was building a PWA app that consumes APIs from some providers.\n\nAs PWA is just a web app, so it has the exactly the same CORS restrictions as other web apps.\n\nYou won't have this type of issue if you are using native development, so it is very annoying as I don't have access to those APIs server to enable Cross Origin Request.\n\nBy browsing in Google, I found someone built a solution that enables a reverse proxy to overcome this difficulties.\n\n## Solution\n\nThe name is CORS-ANYWHERE, the github link is https://github.com/Rob--W/cors-anywhere/ \n\nThis is a very simple and neat solution to solve the problems for small projects.\n\nDepends on the traffic of your project, you can buy different servers with different specification, I used Heroku free server as my application is relatively small.\n\n## Steps to create the reverse proxy in Heroku free instance\n\nRegister a free account in Heroku, please verify your email as per instruction in Heroku.\nThen Create a new app:\n![heroku](https://i.imgur.com/IVXFYbt.png)\nFollow the instruction to install Heroku CLI and GIT if you didn't have them installed before.\n![heroku](https://i.imgur.com/2ovsWYO.png)\nOpen your terminal or cmd(Windows).\nClone the CROS-anywhere from Github\n\n```bash\ngit clone https://github.com/Rob--W/cors-anywhere.git\ncd cors-anywhere/\n```\n\nLogin to Heroku and add your app as a remote repo, then push the app to the app\n\n```bash\nheroku git:remote -a enteryourappname\ngit push heroku master\n```\n\nIt will build the app and return a link to your app, use this app as a reverse proxy.\n[heroku](https://i.imgur.com/2ovsWYO.png)\n\n## How to Use it\n\n>- You can use it by adding your app url as a prefix to your api, for example your heorku url is \"https://abc.herokuapp.com/\", your API is \"https://api.com/user\".\n>- What you need to do is to send the request to \"https://abc.herokuapp.com/https://api.com/user\", it will return whatever will be returned from the API server.\n>- You can test the API by using the demo CROS-anywhere demo: https://cors-anywhere.herokuapp.com/\n","excerpt":"I was building a PWA app that consumes APIs from some providers.\n\nAs PWA is just a web app, so it has the exactly the same CORS restrictions as other web ......","path":"posts/solutions-for-cross-origin-request-security-cors--in-pwa-progressive-web-apps.5d1eefb92616e305404ead31313caec9.md"},{"title":"flutter - how to show message in ui after receving web responses","metas":{"title":"flutter - how to show message in ui after receving web responses","author":"sporule","date":"2019-07-18","categories":["code"],"tags":["flutter","android"],"coverimage":"https://i.imgur.com/GzmpA4s.png"},"content":"\n\n## The Problem\n\nFlutter was quiet hot in the Tech news these days, so I am giving it a try to write an Android app.\n\nIt share the similar concept as React, which uses the States system. I wouldn't explain more here as this can be found all over the place in Google.\n\nI did some Windows development before, which has a control \"MessageBox\" is very useful to give some feedback information to the user.\n\n## Solution\n\nIn flutter, it does have something similar call \"AlertDialog\", however it is not very straightforward.\n\nBelow is an example on how to display a message(or any control) on a screen after receving responses from any web services.\n\nTo start with, we create a widget as a container for displaying the message.\n\nThis widget will be empty for now, but we will have a function later to populate the content of this widget.\n\n```javascript\nWidget messageWidget;\n```\n\nThen we need to place this widget to the location you want it to be\n\n```javascript\n @override\n  Widget build(BuildContext context) {\n        return Stack(\n      children: <Widget>[\n        messageWidget\n      ],\n    );\n}\n```\n\nNow we need to create a function to build the messageWidget, it allows user to pass a text string, which is the message you want to display.\n\n```javascript\nWidget getMessageController(String text){\n    return Stack(\n      children: <Widget>[\n        Align(\n          alignment:Alignment.topCenter,\n          child: Text(text, style: new TextStyle(\n            color: Colors.white,\n            fontSize: 15.0,\n            fontWeight: FontWeight.bold,\n          )),\n        )\n      ],\n    );\n  }\n```\n\nFinally we have a function to handle the request to API\n\n```javascript\nvoid handleMessage() async{\n    setState(() {\n      messageWidget = getMessageController(\"Sending Request....\");\n    });\n    String response= await http.get(\"https://google.com\");\n    //change the message in the message controller after receiving the response\n    setState(() {\n        messageWidget = getMessageController(\"Response received\");\n      });\n    }\n    //dismiss the message box after 3 seconds\n    new Future.delayed(new Duration(seconds: 3), () {\n      setState(() {\n        setState(() {\n          //dismiss the message box\n          messageWidget = null;\n        });\n      });\n    });\n\n  }\n```\n\nYou can simply replace the messageWidget to a AlertDialog and then provide a button for user to dismiss the messagebox.\n\nOverall if you package this into a class, then you will be able to reuse this in all places in your Flutter application.\n\nAt the end, I am still quiet new to Flutter,  please do let me know if you have better way to implement the messagebox.\n","excerpt":"Flutter was quiet hot in the Tech news these days, so I am giving it a try to write an Android app.\n\nIt share the similar concept as React, which uses ......","path":"posts/flutter-how-to-show-message-in-ui-after-receving-web-responses.ceac975768fce9a914998c5f598bdeb8.md"},{"title":"module parse failed unexpected character'' error when using webpack for fontawsome from onsenui","metas":{"title":"module parse failed unexpected character'' error when using webpack for fontawsome from onsenui","author":"sporule","date":"2019-07-12","categories":["code"],"tags":["webpack","onsenui","fontawsome"],"coverimage":"https://www.valentinog.com/blog/wp-content/uploads/2018/01/tutorial-webpack-4-featured.png"},"content":"\n\n## The problem\n\nI was using webpack to package the woff file from fontawsome in OnsenUI, however it raise the error:\n\n```bash\nERROR in ./~/onsenui/css/font_awesome/fonts/fontawesome-webfont.woff?v=4.7.0\nModule parse failed: C:\\Users\\luoha\\Documents\\Projects\\spplayer-pwa\\node_modules\\onsenui\\css\\font_awesome\\fonts\\fontawesome-webfont.woff?v=4.7.0 Unexpected character '' (1:4)\nYou may need an appropriate loader to handle this file type.\n```\n\n## Cause\n\nI have spent quiet a lot of time to find out the reason, end up the solution is very simple.\n\nI was using regex to match the woff file:\n\n {\n        test: /\\.(woff|woff2|eot|ttf|svg)/,\n        loader: 'file?name=assets/[name].[ext]'\n }\nHowever the woff file name is actually fontawesome-webfont.woff?v=4.7.0, it contains a version number at the end. As a result, it does not fit into the pattern of my regex hence webpack didn't load them.\n\n## Solution\n\nThe solution is add a pattern at the end to match possible versions:\n\n{\n      test: /\\.(woff|woff2|eot|ttf|svg)(\\?.*$|$)/,\n      loader: 'file?name=assets/[name].[ext]'\n}\n","excerpt":"I was using webpack to package the woff file from fontawsome in OnsenUI, however it raise the error:\n\n```bash\nERROR in ./~/onsenui/css/font_awesome/fonts/fontawesome-webfont.woff?v=4.7.0\nModule parse failed: C:\\Users\\luoha\\Documents\\Projects\\spplayer-pwa\\node_modules\\onsenui\\css\\font_awesome\\fonts\\f ......","path":"posts/module-parse-failed-unexpected-character-error-when-using-webpack-for-fontawsome-from-onsenui.c91f3e9705c16c960bfeea4e61043fc8.md"},{"title":"exoplayer source error on android 8 and above","metas":{"title":"exoplayer source error on android 8 and above","author":"sporule","date":"2019-07-12","categories":["code"],"tags":["android","exoplayer","java"],"coverimage":"https://miro.medium.com/max/3092/1*oxK1gF5zFP9z9_9qFDOKlQ.png"},"content":"\n\n## The Problem\n\nEXOPlayer is  an open source video player for mobile.\nYesterday I was trying to use EXOPlayer in my Pixel but it couldn't stream video (m3u8) by using EXOPlayer.\n\nThe error message is not very clear: \"Source Error, can't connect to http://xxxxxxxx\"\n\nI was very confused as I am pretty sure the url I passed in is working OK.\n\n## The Cause\n\nI spent 20 minutes trying to resolve the issue, finally I found a small hidden error message in the console says \"Cleartext HTTP traffic not permitted\".\n\nThe new error message is very clear, the solution is simply add android:usesCleartextTraffic=\"true\" into the mainfest:\n\n```javascript\n <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"xxxxxx\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\"\n        android:usesCleartextTraffic=\"true\">\n```\n\nWorks perfectly fine after adding the usesClearText, you will need to add this for Android 8.0 and above.\n\nPlease note that you should not use clear text traffic if the informatin you are trying to send is confidential.\n","excerpt":"EXOPlayer is an open source video player for mobile.\nYesterday I was trying to use EXOPlayer in my Pixel but it couldn't stream video (m3u8) by using EXOPlayer.\n\nThe error message is ......","path":"posts/exoplayer-source-error-on-android-8-and-above.fa8e8cafe5c04dcac24e959ddbb9685e.md"},{"title":"state pattern - control the behaviours by using states","metas":{"title":"state pattern - control the behaviours by using states","author":"sporule","date":"2019-06-13","categories":["design pattern"],"tags":["state pattern","python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/StatePattern/StatePattern.png"},"content":"\n\n## What is States Pattern\n\nStates pattern set a state to a object, then the object will have different behaviours in different states.\n\nState Pattern Implementation:\nBelow is a simple TV on and off example.\n\nThe TV contains two state, stateOn and stateOff\n\nThe TV can't be turn on when the state is stateOn, and the TV can't be turn off when the state is stateOff.\n\nWe start from a State interface, StateOn and StateOff\n\n```python\nclass State():\n    \n    @staticmethod\n    def SwitchOn():\n        raise NotImplementedError\n    @staticmethod\n    def SwitchOff():\n        raise NotImplementedError\n\nclass StateOn(State):\n    \n    @staticmethod\n    def SwitchOn():\n        print(\"You can't switch on again as it is already On\")\n    @staticmethod\n    def SwitchOff():\n        print(\"It is switched off\")\n\nclass StateOff(State):\n    @staticmethod\n    def SwitchOn():\n        print(\"It is switched on\")\n    @staticmethod\n    def SwitchOff():\n        print(\"You can't switch off as it is already off\")\n```\n\nThen I created a TV object that takes name, stateOn and stateOff in constructor.\n\nIt also has two functions which is SwitchOn and Switch Off\n\n```python\nclass TV():\n    def __init__(self,name,stateOn,stateOff):\n        self._name=name\n        self._stateOn=stateOn\n        self._stateOff=stateOff\n        self._state = self._stateOff\n    \n    def SwitchOn(self):\n        self._state.SwitchOn()\n        self._state=self._stateOn\n    \n    def SwitchOff(self):\n        self._state.SwitchOff()\n        self._state=self._stateOff\n```\n\n### Diagram\n\n![State Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/StatePattern/StatePattern.png)\n\n## Example Code\n\n[State Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/StatePattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"States pattern set a state to a object, then the object will have different behaviours in different states.\n\nState Pattern Implementation:\nBelow is a simple TV on and off example.\n\nThe TV contains ......","path":"posts/state-pattern-control-the-behaviours-by-using-states.3ffabdb954014d09fe23b87e6961d3d2.md"},{"title":"composite pattern - consistent representation of each item in hierarchy structure","metas":{"title":"composite pattern - consistent representation of each item in hierarchy structure","author":"sporule","date":"2019-05-28","categories":["design pattern"],"tags":["composite pattern","python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/CompositePattern/CompositePattern.png"},"content":"\n\n## What is Composite Pattern\n\nSometimes we have a requriements that to have a hierarchy design of objects. Such as limitless navigation. Navigation could have individual item and individual item with sub items. Applying composite pattern will make all navigation item in a consistent way not matter if it has children item or not.\n\n## Composite Pattern Implementation\n\nBelow is a simple nodes tree structure example.\n\nStarts from a node model, which contains a children nodes array to store all children nodes.\n\nThe Print() function will print the node name and exectue all children nodes Print() function.\n\nAs you can see, it treat both single node and node with children in the same way.\n\n```python\nclass Node():\n    def __init__(self, name):\n        self._name = name\n        self._nodes = []\n    \n    def Add(self,node):\n        self._nodes.append(node)\n    \n    def Get(self,index):\n        return self._nodes[index]\n    \n    def Print(self):\n        print(self._name)\n        for node in self._nodes:\n            node.Print()\n```\n\nThen I created few nodes, it then prints the nodes from left to right in a tree structure.(you can see the structure of the nodes in the diagram at the end of this article.)\n\n```python\n#create samle nodes\nnodeA = Node(\"A\")\nnodeA1 = Node(\"A1\")\nnodeA2 = Node(\"A2\")\nnodeA1a= Node(\"A1a\")\nnodeA1b = Node(\"A1b\")\nnodeA2a = Node(\"A2a\")\nnodeA2b = Node(\"A2b\")\n\n#left nodes\nnodeA.Add(nodeA1)\nnodeA1.Add(nodeA1a)\nnodeA1.Add(nodeA1b)\n\n#RIGHT NODES\nnodeA.Add(nodeA2)\nnodeA2.Add(nodeA2a)\nnodeA2.Add(nodeA2b)\n\n\nnodeA.Print()\n#output\n#A\n#A1\n#A1a\n#A1b\n#A2\n#A2a\n#A2b\n```\n\n### Diagram\n\n![Composite Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/CompositePattern/CompositePattern.png)\n\n## Example Code\n\n[Composite Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/CompositePattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Sometimes we have a requriements that to have a hierarchy design of objects. Such as limitless navigation. Navigation could have individual item and individual item with sub items. Applying composite ......","path":"posts/composite-pattern-consistent-representation-of-each-item-in-hierarchy-structure.44ba92e737af5ac8720d139c55b05966.md"},{"title":"iterator pattern - access the items in aggregate obejcts without knowing the underlying of the objects","metas":{"title":"iterator pattern - access the items in aggregate obejcts without knowing the underlying of the objects","author":"sporule","date":"2019-05-08","categories":["design pattern"],"tags":["iterator pattern","python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/IteratorPattern/IteratorPattern.png"},"content":"\n\n## What is Iterator Pattern\n\nIterator pattern provides a consistent interface to different aggregate objects such as list, dictionary etc. It disconnect the user of the iterator interface and its underlying objects.\n\nFor example the user of the iterator interface does not need to worry about the underlying objects is dict or array etc.\n\n## Iterator Pattern Implementation\n\nBelow example is showing calling the iterator for an array and requests from database.\n\nFirstly, we need to have a iterator interface. This interface needs to implment a logic on how to iterate the items.\n\nI have created a very simple one with HasNext() and Next() for using in while loop.\n\n```python\nclass Iterator():\n    def __init__(self,name):\n        self._name=name\n        \n    def HasNext(self):\n        raise NotImplementedError\n    \n    def Next(self):\n        raise NotImplementedError\n```\n\nThen I created two classes, one is student and the other is teacher. They both have a function call GetIterator(), it turns objects into Concrete iterator which I will explain below.\n\nThe teacher model is very basic without any special settings\n\n```python\nclass Teacher():\n    def __init__(self,name):\n        self._name=name\n    \n    @property\n    def Name(self):\n        return self._name\n    \n    @staticmethod\n    def GetIterator(teachers):\n        #teachers is the teacher array\n        return TeacherIterator(teachers)\n```\n\nI added a Mock Database class to simulate getting students object from the database.\n\nI also added a function GetStudentById() in student class to simulate getting specific student by using the id from the Mock Database.\n\nYou don't need to focus on the details about mocking database and get students from the mock database, the whole purpose of doing that is trying to show a object that does not contain out of box iterator. It is not a good practise to use iterator in database in this way.\n\n```python\nclass Student():\n    def __init__(self,name):\n        self._name=name\n    \n    @property\n    def Name(self):\n        return self._name\n    \n    @staticmethod\n    def GetIterator(student_ids):\n        return StudentIterator(student_ids)\n    \n    @staticmethod\n    def GetStudentById(id):\n        #this is a mock of getting student from database\n        return DBMock.GetStudent(\"Students\",id)\n\nclass DBMock():\n    \"\"\"This is the mock database\"\"\"\n    def __init__(self):\n        self._db = \"\"\n    \n    @staticmethod\n    def GetStudent(collection,id):\n        return Student(collection+\" \"+str(id))\n```\n\nNow we need to implement the Concrete Iterator TeacherIterator and StudentIterator. These are inherit from iterator. This is the iterator object that will return for GetIterator()\n\nThese Concrete iterators has its own implementation of HasNext() or Next(), it is very similar as the adapter pattern.\n\n```python\nclass TeacherIterator(Iterator):\n    #teachers are the teacher dict\n    def __init__(self,teachers):\n        self._teachers=teachers\n        self._position=-1\n        \n    def HasNext(self):\n        if len(self._teachers)<=self._position+1:\n            return False\n        else:\n            return True\n    \n    def Next(self):\n        self._position+=1\n        return self._teachers[self._position]\n\nclass StudentIterator(Iterator):\n    #student_ids are the student ids array\n    def __init__(self,student_ids):\n        self._student_ids=student_ids\n        self._position=-1\n        \n    def HasNext(self):\n        if len(self._student_ids)<=self._position+1:\n            return False\n        else:\n            return True\n    \n    def Next(self):\n        self._position+=1\n        return Student.GetStudentById(self._student_ids[self._position])\n```\n\nNow we run a test so you can see PrintAllNames() prints all the objects correctly without knowing the underlying format of the obejcts. The format means it does not know if it is array or dictionary or other etc..\n\n```python\nclass Helper():\n    def __init__(self):\n        pass\n    @staticmethod\n    def PrintAllNames(iterators):\n        while iterators.HasNext():\n            item = iterators.Next()\n            print(\"The name is \"+item.Name)\n\nstudent_ids = [3,5,1,9,8]\nteachers = [Teacher(\"teacher a\"),Teacher(\"teacher b\"),Teacher(\"teacher c\"),Teacher(\"teacher d\"),Teacher(\"teacher e\")]\n\n#This is the student iterator to iterate the database\nstudentsIterator = Student.GetIterator(student_ids)\n#This is the teach iterator to iterate the teachers object itself\nteachersIterator = Teacher.GetIterator(teachers)\n\n\nHelper.PrintAllNames(studentsIterator)\n#outputs:\n#The name is Students 5\n#The name is Students 3\n#The name is Students 1\n#The name is Students 9\n#The name is Students 8\n\nHelper.PrintAllNames(teachersIterator)\n#outputs:\n#The name is teacher a\n#The name is teacher b\n#The name is teacher c\n#The name is teacher d\n#The name is teacher e\n```\n\n### Diagram\n\nI didn't show the teacher model and student model in the diagram as that is not important.\n\n![Iterator Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/IteratorPattern/IteratorPattern.png)\n\n## Example Code\n\n[Iterator Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/IteratorPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Iterator pattern provides a consistent interface to different aggregate objects such as list, dictionary etc. It disconnect the user of the iterator interface and its underlying objects.\n\nFor example the user ......","path":"posts/iterator-pattern-access-the-items-in-aggregate-obejcts-without-knowing-the-underlying-of-the-objects.89059bd594367c110c6e953858d00055.md"},{"title":"template pattern - template for processes/algorithms with flexibility","metas":{"title":"template pattern - template for processes/algorithms with flexibility","author":"sporule","date":"2019-04-10","categories":["design pattern"],"tags":["template pattern","python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/TemplatePattern/TemplatePattern.png"},"content":"\n\n## What is Template Pattern\n\nTemplate pattern sets the template for a logical process / algorithms that can be implemented in its children class.\n\nIn addition, using a hook in the template pattern provides the flexibility for its children class to exectue functions that are special for the children class.\n\n## Template Pattern Implementation\n\nThe scenario of this example is cooking a meal.\n\nWe start from the parent class Meal, it has a function ConvertToMeal() which contains all the logic of the process for turning ingredients to a meal.\n\nIt also includes a function Hook() which is empty. Children class can implement the Hook() function to bring their own process into the template.\n\nThis Hook() is very useful and I will explain it later.\n\n```python\nclass Meal():\n    def __init__(self,name):\n        self._name=name\n    \n    def ConvertToMeal(self):\n        self.Prepare()\n        self.Cook()\n        self.Hook()\n\n    def Prepare(self):\n        raise NotImplementedError(\"You need to implement this funcion\")\n    \n    def Cook(self):\n        raise NotImplementedError(\"You need to implement this funcion\")\n    \n    def Hook(self):\n        pass\n```\n\nWe also have 2 child classes that inherit from the Meal class. \n\nVegetable does not have any function to add into its cooking process, so it does not need to override the function Hook().\n\nMeal has an extra process by providing a wine, so it implements the function Hook()\n\n```python\nclass Vegetable(Meal):  \n\n    def Prepare(self):\n        print(self._name+\": preparing vegetables\")\n    \n    def Cook(self):\n        print(self._name +\": stir frying vegetables\")\n\nclass Meat(Meal):  \n\n    def Prepare(self):\n        print(self._name+\": preparing Meat\")\n    \n    def Cook(self):\n        print(self._name +\": grilling meat\")\n    \n    def Hook(self):\n        print(self._name+\": serving with wine\")\n```\n\nRun Result:\n\n```python\npork = Meat(\"pork\")\ncabbage = Vegetable(\"cabbage\")\npork.ConvertToMeal()\n#output pork: preparing Meat\n#output pork: grilling meat\n#output pork: serving with wine\ncabbage.ConvertToMeal()\n#output cabbage: preparing vegetables\n#output cabbage: stir frying vegetables\n```\n\n### Diagram\n\n![Template Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/TemplatePattern/TemplatePattern.png)\n\n## Example Code\n\n[Template Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/TemplatePattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Template pattern sets the template for a logical process / algorithms that can be implemented in its children class.\n\nIn addition, using a hook in the template pattern provides the flexibility ......","path":"posts/template-pattern-template-for-processes-algorithms-with-flexibility.490dabafbd6c86a544a4784b19ab8917.md"},{"title":"facade pattern - decouples the client and the components on top of adapter pattern","metas":{"title":"facade pattern - decouples the client and the components on top of adapter pattern","author":"sporule","date":"2019-03-20","categories":["design pattern"],"tags":["facade pattern","python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/FacadePattern/FacadePattern.png"},"content":"\n\n## What is Facade Pattern\n\nIt is very similar to the adapter pattern, but it simplify the interface for the client. By doing that, it also decouples the client and the components behind the interface.\n\n## Adapter Pattern Implementation\n\nBelow is a simple example of using Remote Control to turn on DVD Player and TV for watching movies.\n\nFirst we have Remote Control, TV and DVD Player\n\n```python\nclass TV():\n    def __init__(self,name):\n        self._name=name\n        \n    @property\n    def Name(self):\n        return self._name\n    \n    def SwitchOn(self):\n        print(self.Name +\" is on.\")\n        \nclass DVDPlayer():\n    def __init__(self,name):\n        self._name=name\n        \n    @property\n    def Name(self):\n        return self._name\n    \n    def Play(self):\n        print(self.Name +\" is playing.\")\n        \nclass RemoteControl():\n    def __init__(self,facade):\n        self._facade = facade\n    \n    def WatchMovie(self):\n        self._facade.On()\n```\n\nYou can see that the TV has a function SwitchOn(), DVD Player has the function Play(), but the Remote Control has a function WatchMovie is calling the function On().\n\nNow we create a new TV facade that combines the Play() and SwitchOn(), a fterthat we expose the On() function to the Remote Control\n\n```python\nclass TVFacade():\n    def __init__(self,tv,dvd):\n        self._tv=tv\n        self._dvd = dvd\n    \n    def On(self):\n        self._tv.SwitchOn()\n        self._dvd.Play()\n```\n\nRun a test:\n\n```python\nfrom models import RemoteControl\nfrom models import TV\nfrom models import TVFacade\nfrom models import DVDPlayer\n\n'''without adapter'''\ntv = TV(\"ABC TV\")\ndvd = DVDPlayer(\"ABC DVD Player\")\n\n'''with adapter'''\n#add adapter to connect tv and remote\ntv_facade = TVFacade(tv,dvd)\ncontrol = RemoteControl(tv_facade)\ncontrol.WatchMovie() #output ABC TV is on and ABC DVD PLayer is playing\n```\n\nAs you can see, the remote control can only see the function On(), which simplify the interface that the client can call. In addition, there is no direct connection(loose coupling) between the remote control and the components(DVD Player, TV).\n\n### Diagram\n\n![AdapterPattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/FacadePattern/FacadePattern.png)\n\n## Example Code\n\n[Facade Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/FacadePattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"It is very similar to the adapter pattern, but it simplify the interface for the client. By doing that, it also decouples the client and the components behind the interface.\n\n\n\nBelow ......","path":"posts/facade-pattern-decouples-the-client-and-the-components-on-top-of-adapter-pattern.f31f60dd0253d0860f7f943a2aee9ee1.md"},{"title":"adapter pattern - connects two existing components together without touching them","metas":{"title":"adapter pattern - connects two existing components together without touching them","author":"sporule","date":"2019-03-07","categories":["design pattern"],"tags":["adapter pattern","python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/AdapterPattern/AdapterPattern.png"},"content":"\n\n## What is Adapter Pattern\n\nSometimes we want to integrate a vendor solution or a component that is not part of the design. As we can't change the vendors solution, and we don't want to change how our application works. Adapter Pattern is very useful in this scenario, it adds a layer between our solution and the vendors solution. \n\n## Adapter Pattern Implementation\n\nBelow is a simple example of using Remote Control to control a TV.\n\nFirst we have Remote Control and TV.\n\n```python\nclass TV():\n    def __init__(self,name):\n        self._name=name\n        \n    @property\n    def Name(self):\n        return self._name\n    \n    def SwitchOn(self):\n        print(self.Name +\" is on.\")\n\nclass RemoteControl():\n    def __init__(self,tv):\n        self._tv = tv\n    \n    def SwitchOnTV(self):\n        self._tv.On()\n```\n\nYou can see that the TV has a function SwitchOn(), but the Remote Control is calling the function On().\n\nNow we create a new model that add the function On() in TV, the On() function will call the TV's SwtichOn() function.\n\n```python\nclass TVAdapter():\n    def __init__(self,tv):\n        self._tv=tv\n    \n    def On(self):\n        self._tv.SwitchOn()\n```\n\nRun a test:\n\n```python\n'''without adapter'''\ntv = TV(\"ABC TV\")\ntry:\n    control = RemoteControl(tv)\n    control.SwitchOnTV() #raise error, AttributeError: 'TV' object has no attribute 'On'\nexcept Exception as ex:\n    print(str(ex)) \n\n'''with adapter'''\n#add adapter to connect tv and remote\ntv_adapter = TVAdapter(tv)\ncontrol = RemoteControl(tv_adapter)\ncontrol.SwitchOnTV() #output ABC TV is on.\n```\n\nAs you can see, without adapter it will throw an error. The adapter connects the TV and Remote together without changing the TV class or Remote class.\n\n### Diagram\n\n![AdapterPattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/AdapterPattern/AdapterPattern.png)\n\n## Example Code\n\n[Adapter Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/AdapterPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Sometimes we want to integrate a vendor solution or a component that is not part of the design. As we can't change the vendors solution, and we don't want to ......","path":"posts/adapter-pattern-connects-two-existing-components-together-without-touching-them.d57cd8bb5a02cfe9d3978848ae7aa45e.md"},{"title":"command pattern - encapsulates actions as object","metas":{"title":"command pattern - encapsulates actions as object","author":"sporule","date":"2019-02-23","categories":["design pattern"],"tags":["command pattern","queue","python"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/CommandPattern/CommandPattern.png"},"content":"\n\n## What is Command Pattern\n\nCommand Pattern packages(encapsualtes) commands(actions) as a objects that can be injected into command runners. These objects will expose a public method( such as Do(), Exec() etc...) for the purpose of triggering the actions. Simple command exectuers could be threads, computers, remote controls etc.. By dong this, the command runner does not need to know what are the commands as they will only execute the command objects' generic public function.\n\n## Command Pattern Implementation\n\nIn the example below, we are having one computer to exectue different commands in order. All exectued commands will be print to the screen.\n\nI have a class command as the base class for other commands. This will be an interface for other languages.\n\n```python\nclass Command():\n    def __init__(self,name):\n        self._name=name\n        \n    @property\n    def Name(self):\n        return self._name\n    \n    def Do(self):\n        raise NotImplementedError(\"You should implmenet this function\")\n```\n\nAnd then I created few commands that inherits from Command\n\n```python\nclass CleanFilesCommand(Command):    \n    def Do(self):\n        print(\"Running - Name: \"+self.Name+ \" / Command: CleanFilesCommand.\")\n\nclass PriceCheckCommand(Command):    \n    def Do(self):\n        print(\"Running - Name: \"+self.Name+ \" / Command: PriceCheckCommand.\")\n\nclass ShoppingCommand(Command):    \n    def Do(self):\n        print(\"Running - Name: \"+self.Name+ \" / Command: ShoppingCommand.\")\n```\n\nCreated An Exectuer class which calls the commands Do()\n\n```python\nclass Exectuer():\n    def __init__(self,name):\n        self._name = name\n        self._command=None\n    \n    def SetCommand(self,command):\n        self._command = command\n    \n    def Execute(self):\n        print(self._name + \": \")\n        if self._command is None:\n            print(\"No command to execute\")\n            return\n        self._command.Do()\n```\n\nAfter that I created a first in first out job queue, all commands are added into the job queue.\n\n```python\n#All the commands are First in First Out in a queue\nq = queue.Queue()\n\n#add some commands into the queue\nq.put(PriceCheckCommand(\"PriceCheckCommand 1\"))\nq.put(CleanFilesCommand(\"CleanFilesCommand 1\"))\nq.put(PriceCheckCommand(\"PriceCheckCommand 2\"))\nq.put(ShoppingCommand(\"ShoppingCommand 1\"))\nq.put(CleanFilesCommand(\"CleanFilesCommand 2\"))\nInitiate a New Exectuer to run all the commands from the queue\n\n#add an exectuer computer 1\ncomputer1 = Exectuer(\"Computer 1\")\ncomputer1.Execute()\n\nwhile not q.empty():\n    computer1.SetCommand(q.get())\n    computer1.Execute()\n```\n\nBelow is the output, as you can see different commands are exectued by the exectuer in first in first out order\n\n```python\n'''output\nComputer 1:\nNo command to execute\nComputer 1:\nRunning - Name: PriceCheckCommand 1 / Command: PriceCheckCommand.\nComputer 1:\nRunning - Name: CleanFilesCommand 1 / Command: CleanFilesCommand.\nComputer 1:\nRunning - Name: PriceCheckCommand 2 / Command: PriceCheckCommand.\nComputer 1:\nRunning - Name: ShoppingCommand 1 / Command: ShoppingCommand.\nComputer 1:\nRunning - Name: CleanFilesCommand 2 / Command: CleanFilesCommand.\n'''\n```\n\n### Diagram\n\n![Command Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/CommandPattern/CommandPattern.png)\n\n## Example Code:\n\n[Command Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/CommandPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Command Pattern packages(encapsualtes) commands(actions) as a objects that can be injected into command runners. These objects will expose a public method( such as Do(), Exec() etc...) for the purpose of ......","path":"posts/command-pattern-encapsulates-actions-as-object.e77a0fdf17086484f2ed29c806893efd.md"},{"title":"singleton pattern - global access to only one instance when is needed","metas":{"title":"singleton pattern - global access to only one instance when is needed","author":"sporule","date":"2019-02-23","categories":["design pattern"],"tags":["singleton pattern"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/SingletonPattern/SingletonPattern.png"},"content":"\n\n## What is Singleton Pattern\n\nSingleton Pattern is making sure that only one instance of the class can be created. Normally it is to make sure the data integrity. For example if you have two connections that connects to the database at the same time, then it may raise the conflict. Another example will be Caching, ideally we should only have 1 Cache for the system unless we have a valid reason to do it.\n\nSingleton and Global Variable is very differnt, the main difference I found is Singleton is a lazy loading of Global variables. Global variables needs to be initated when starting the application, but Singleton will be initiated in the first usage.\n\n## Singleton Pattern Implementation\n\nBelow is a simple example of Cache Implementation.\n\nPlease do not use the below implmenetation for production in python, please use metaclass to implement Singleton in Python.\n\nThe reason that I came up with this implementation is to show an implementation that could apply to other languages.\n\nWe only have 1 class here which is Cache:\n\n```python\nclass Cache():\n    _instance = None\n    content = \"\"\n\n    @staticmethod\n    def GetInstance():\n        if Cache._instance is None:\n            Cache._instance = Cache()\n        return Cache._instance\n        \n    def Add(self,content):\n        #Assign Value to the content\n        self.content = content\n        print(self.content + \" is added to the cache\")\n    \n    def Get(self):\n        #Print the content\n        print(\"The content is: \"+self.content)\n```\n\nIn Python there is no static class concept, the class itself is kind of an instance, so I have put below test code to run:\n\n```python\nfrom models import Cache\n\n#create normal instance\ncache_a = Cache()\ncache_a.Add(\"Hello\")\n\n#Singleton\ncache_s1 = Cache.GetInstance()\ncache_s1.Add(\"This is Cache S1\")\n\n#Create another instance to check if this is the same instance as s1\ncache_s2 = Cache.GetInstance()\n\n#Testing the instance\ncache_a.Get()\n#output The content is: Hello\ncache_s1.Get()\n#output The content is: This is Cache S1\ncache_s2.Get()\n#output The content is: This is Cache S1\n```\n\nAs you can see here, cache_a is a new instance of the Cache which it is own its own. So it prints \"Hello\" which is different compare to cache_s1 and cache_s2.\n\ncache_s1 and cache_s2 are using the same instance, so they both print \"thi is cache s1\".\n\n### Diagram\n\nThere is no class diagram for Singleton as there is only one class. I have attached a kind of \"process\" diagram\n\n![Singleton Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/SingletonPattern/SingletonPattern.png)\n\n## Example Code\n  \n[Singleton Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/SingletonPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Singleton Pattern is making sure that only one instance of the class can be created. Normally it is to make sure the data integrity. For example if you have two ......","path":"posts/singleton-pattern-global-access-to-only-one-instance-when-is-needed.135d8e595b745d85952dcb62400bfaf7.md"},{"title":"fun fact of slice in golang","metas":{"title":"fun fact of slice in golang","author":"sporule","date":"2019-02-05","categories":["code"],"tags":["golang","slice"],"coverimage":"https://www.vertica.com/wp-content/uploads/2019/07/Golang.png"},"content":"\n\n## Fun Fact\n\nSlice is a very important function in GoLang, which can help us to work with array easily.\n\nHowever I just relised that GoLang only allows extention of Slice to the right, but not from the left.\n\nIn below example, we can drop the last four elements of slice by using X[:4] and then extend it back by using X[:6].\n\nHowever we can't drop the first two elements and extend it back by using X[-2:]\n\n```go\nfunc main() {\n    //now we create an array rather than slice\n    ar := [6]int{2, 3, 5, 7, 11, 13}\n    fmt.Println(ar)\n    //output [2 3 5 7 11 13]\n\n    // Slice the slice to give it 2 length. However the capacity remain the same\n    s := ar[:2]\n    printSlice(s)\n    //output len=2 cap=6 [2 3]\n\n    // Extend its length.\n    s = ar[:6]\n    printSlice(s)\n    //output len=6 cap=6 [2 3 5 7 11 13]\n\n    // Drop its first two values. Capacity drops to 4\n    s = ar[2:]\n    printSlice(s)\n    //output len=4 cap=4 [5 7 11 13]\n\n    //s = ar[-2:]\n    printSlice(s)\n    //output error\n\n    fmt.Println(ar)\n    //output [2 3 5 7 11 13]\n}\n\nfunc printSlice(s []int) {\n\tfmt.Printf(\"len=%d cap=%d %v\\n\", len(s), cap(s), s)\n}\n```\n\nBy looking at the underlying array, the array still has the data that slice need to extend it back as dropping elements in slice will not impact the elements in the referenced array\n\n```go\nfunc main() {\n     ar := [6]int{2, 3, 5, 7, 11, 13}\n     fmt.Println(ar)\n     //output [2 3 5 7 11 13]\n     // Slice the slice to give it 2 length.\n     s := ar[:2]\n     printSlice(s)\n     //output len=2 cap=6 [2 3]\n     // Extend its length.\n     s = ar[:6]\n     printSlice(s)\n     //output len=6 cap=6 [2 3 5 7 11 13]\n     // Drop its first two values.\n     s = ar[2:]\n     printSlice(s)\n     //output len=4 cap=4 [5 7 11 13]\n     //s = ar[-2:]\n     printSlice(s)\n     //output error\n     fmt.Println(ar)\n     //output [2 3 5 7 11 13]\n}\n\nfunc printSlice(s []int) {\n    fmt.Printf(\"len=%d cap=%d %v\\n\", len(s), cap(s), s)\n}\n```\n\nThis is a bit weird but it is OK as it does not have a huge impact on array operations. I will update to this post once I figure it out the alternative.\n","excerpt":"Slice is a very important function in GoLang, which can help us to work with array easily.\n\nHowever I just relised that GoLang only allows extention of Slice to the right, ......","path":"posts/fun-fact-of-slice-in-golang.d71b0a32ade5891149161cd419f38853.md"},{"title":"factory pattern - do not depend on concrete implementations","metas":{"title":"factory pattern - do not depend on concrete implementations","author":"sporule","date":"2019-01-25","categories":["design pattern"],"tags":["factory pattern"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/FactoryPattern/Factory%20Pattern.png"},"content":"\n\n## What is Factory Pattern\n\nFactory Pattern removes code dependenices from the concrete objects,which means the caller of the code don't need to worry about the actual implemenation so the caller does not need to change when the underlying is changed.\n\nA very simple example is we order takeaway from a shop, but we don't care how they cook it. It means the shop can change their ingredients or even their chief without impacting all its customers.\n\n## Factory Pattern Implementation\n\nThe below scenarios is to unlock your phone by using FaceId or Irirs.\n\nWe have phone and the implmentation of the phone:\n\n```python\nclass Phone():\n    def __init__(self,name):\n        raise NotImplementedError(\"You should implement this function\")\n\n    def Unlock(self):\n        raise NotImplementedError(\"You should implement this function\")\n\nclass iPhone(Phone):\n    def __init__(self,name):\n        self._name = \"iPhone X: \"+name\n        print(self.Name)\n \n    def Unlock(self):\n        #faceID unlock\n        print(self.Name+\" Phone is unlocked by face\")\n\n    @property\n    def Name(self):\n        return self._name\n\nclass SamsungPhone(Phone):\n    def __init__(self,name):\n        self._name = \"Samsung S8: \"+name\n        print(self.Name)\n    def Unlock(self):\n        print(self.Name+\" Phone is unlocked by Iris\")\n    @property\n    def Name(self):\n        return self._name\n```\n\nNormal Implementation: we need to create an instance of the iPhone or Samsung Phone, and then call the function Unlock\n\n```python\n#normal implementation, the caller of the function connects to all concreate classes.\niphone = iPhone(\"MyPhone\")\nsamsung = SamsungPhone(\"MyPhone\")\niphone.Unlock()\nsamsung.Unlock()\n\n#output\n'''\niPhone X: MyPhone\nSamsung S8: MyPhone\niPhone X: MyPhone is unlocked by face\nSamsung S8: MyPhone Phone is unlocked by Iris\n'''\n```\n\nFactory Pattern Implementation: We created a phone factory to take the responsibilities of creating phone instance\n\n```python\nclass PhoneFactory():\n    @staticmethod\n    def CreatePhone(name):\n        if(name==\"iphone\"):\n            return iPhone(\"From Factory: MyPhone\")\n        if(name==\"samsung\"):\n            return SamsungPhone(\"From Factory: MyPhone\")\n        else:\n            return \"We dont have the phone you want.\"\n```\n\nThen we call phone factory to get the instance of different phones, by doing this, we remove the dependencies between the caller and the implementation of phones\n\n```python\n#factory method, the caller of the function connects to only an abstract factory\nfactory = PhoneFactory()\niphoneNew = factory.CreatePhone(\"iphone\")\nsamsungNew = factory.CreatePhone(\"samsung\")\niphoneNew.Unlock()\nsamsungNew.Unlock()\n\n#output\n'''\niPhone X: From Factory: MyPhone\nSamsung S8: From Factory: MyPhone\niPhone X: From Factory: MyPhone is unlocked by face\nSamsung S8: From Factory: MyPhone Phone is unlocked by Iris\n'''\n```\n\n### Diagram\n\nThe normal implementation is solid black line and the factory pattern is solid red line.\n\nAs you can tell from the diagram, Phone factory is the only dependency for the caller in factory pattern. It means caller do not care about phone changes.\n\nIn normal Implementation, the caller has a direct connection to other phone implementations, which means any changes in phone implementations will result a change in the caller.\n\n![Factory Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/FactoryPattern/Factory%20Pattern.png)\n\n## Example Code\n\n[Factory Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/FactoryPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Factory Pattern removes code dependenices from the concrete objects,which means the caller of the code don't need to worry about the actual implemenation so the caller does not need to ......","path":"posts/factory-pattern-do-not-depend-on-concrete-implementations.d8c175db984ed3db87ca00f615db2810.md"},{"title":"decorator pattern - add behaviour to existing functions","metas":{"title":"decorator pattern - add behaviour to existing functions","author":"sporule","date":"2019-01-13","categories":["design pattern"],"tags":["decorator pattern"],"coverimage":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Decorator_UML_class_diagram.svg/400px-Decorator_UML_class_diagram.svg.png"},"content":"\n\n## What is Decorator Pattern\n\nDecorator Pattern can change a function without making any changes in the function. It means the changes of the function would not impact any existing code.\n\n## The Problem\n\nA website was built for sharing local news. Now they want to build the API to share content with other developers.\n\nThey were thinking adding a new function in the content to output json, but it invovles change of the current tested code.\n\nAs a solution, decorator can help them to add output json into the function without changing any existing code.\n\n## Decorator Pattern Implementation\n\nWe have an existing tested Content class to output content:\n\n```python\nclass Content():\n    def __init__(self,content):\n        self._content = content\n    def export_content(self):\n        return self._content\n```\n\nWe will create a Output_type class to output the content in the specific format:\n\n```python\nclass Output_type():\n    @staticmethod\n    def to_json(content):\n        return \"This is json format: \"+ content\n```\n\nWe can wrap the Content.export_content into the Output_type.to_json. In this example, as to_json is genenral to all type of content, so we wrap the output content of Content.export_content. You can wrap a function as well.\n\n```python\nfrom models.content import Content\nfrom models.output_type import Output_type\n\nb = Content(\"this is fun\")\nprint(b.export_content())\nprint(Output_type.to_json(b.export_content()))\n\n#output is :\n#this is fun\n#This is json format: this is fun\n```\n\nAbove is a very simple example of decorator. Nowadays, most of the modern programming language has a nice way to implement decorators, below is a simple example in python.\n\nWe added a wrapper function in Output_type class. *args and **kwargs are the arguments from the pass in function.\n\n```python\nclass Output_type():\n    @staticmethod\n    def to_json(content):\n        return \"This is json format: \"+content\n\n    @staticmethod\n    def to_json_decorator(func):\n        def func_wrapper(*args,**kwargs):\n            return \"This is decorator format: \"+ Output_type.to_json(func(*args,**kwargs))\n        return func_wrapper\n```\n\nIn addition, we added a new function export_content_decorator in the Content class. We can also create this function outside the Content class as it is a simple wrapper of the existing export_content function.\n\n```python\nfrom .output_type import Output_type  \n\nclass Content():\n    def __init__(self,content):\n        self._content = content\n    def export_content(self):\n        return self._content\n\n    @Output_type.to_json_decorator\n    def export_content_decorator(self):\n        return self.export_content()\n```\n\nAs you can see, the export_content_decorater has a decorater @Output_type.to_json_decorator. It bascially perform the same behaviour as our previous general decorator(I have added \"This is decorator format:\" in the front to seperate them).\n\n```python\nfrom models.content import Content\nfrom models.output_type import Output_type\n\nb = Content(\"this is fun\")\nprint(b.export_content())\nprint(Output_type.to_json(b.export_content()))\nprint(b.export_content_decorator())\n\n#output:\n#this is fun\n#Output from general decorator: This is json format: this is fun\n#Output from Python decorator: This is decorator format: This is json format: this is fun\n```\n\n### Diagram (From Wikipedia)\n\n![Decorator Pattern](https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Decorator_UML_class_diagram.svg/400px-Decorator_UML_class_diagram.svg.png)\n\n## Key Message To Take Away\n\nDecorator Pattern is very common in the daily usage, such as authentication, content output etc.\n\nThe key message to remember is Decorator Pattern is trying to add new function to existing functions without making changes on existing tested code. Also it helps reduce duplication of code. For example we can reuse json output decorator in any string type of content.\n\n## Example Code\n\n[Decorator Pattern](https://github.com/Hao-Luo/DesignPattern/tree/master/DecoratorPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"Decorator Pattern can change a function without making any changes in the function. It means the changes of the function would not impact any existing code.\n\n\n\nA website was built for ......","path":"posts/decorator-pattern-add-behaviour-to-existing-functions.046f0665cd06e155005b58c46a9a9493.md"},{"title":"observer pattern - a-update-all can be better than all-check-a","metas":{"title":"observer pattern - a-update-all can be better than all-check-a","author":"sporule","date":"2018-12-27","categories":["design pattern"],"tags":["observer pattern","loose coupling"],"coverimage":"https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/ObserverPattern/Class%20Diagram.jpg"},"content":"\n\n## What is Observer Pattern\n\n- From the book: The Observer Pattern defines a one-to-many dependency between objects so that when one object changes state, all of its dependents are notified and updated automatically.\n- From me: The Observer Pattern is trying to resolve the problem of coupling in a \"One\" to \"Many\" relationship by handed over the update responsibilities to the \"One\".\n\n## The Problem\n\nAt the beginning of smart phone (Nokia), we don't have push notification for our smart phones. We will need to open the app and then check with the server to see if there are any updates.\n\nAs a result, the battery runs out quickly because the manually checking, the server may get overloaded because of the requests.\n\nNowadays we don't do it any more because of the push services, our phone is notified when we have a new message.\n\nThis is the meaning of A-Update-All can be better than All-Check-A.\n\n## Observer Pattern Implementation\n\nFor better understanding, I have implemented a extremly simple observer pattern by using the example of newslettter.\n\nThe scenario is customer will receive notification when there is a new newsletter.\n\nWe create an interface/abstract class for Both newsletter and subscriber, although I don't normally program to interface in a small system.\n\nThe newsletter object will have the function to add_subscriber and remove_subscriber\n\n```python\nclass Newsletter():\n    def __init__(self):\n        self._subscribers = []\n\n    def add_subscriber(self, subscriber):\n        self._subscribers.append(subscriber)\n\n    def remove_subscriber(self,subscriber):\n        self._subscribers.remove(subscriber)\n\n    def notify_subscribers(self):\n        raise NotImplementedError(\"You should implement this function\")\n\nclass Subscriber():\n    def __init__(self,name):\n        self._name = name\n\n    @property\n    def Name(self):\n        return self._name\n    def get_notification(self,content):\n        print(self.Name +': I have just receied '+content+' subscription!.')\n```\n\nThen we create the actual class that inheri from its interface, as it is a very simple example so I didn't put any functions or properties for the classes.\n\n```python\nfrom models import Newsletter \nclass Fashion_newsletter(Newsletter):\n    def notify_subscribers(self,content):\n        for subscriber in self._subscribers:\n            subscriber.get_notification('new fashion newsletter: '+content)\n\n\nfrom models import Subscriber\n\nclass Customer(Subscriber):\n    def random(self):\n        pass\n\n```\n\nAs you can tell there is a notify_subscribers function to call the subscriber's get_notification function, this is bascially what Observer Pattern it is.\n\nThe implementation of the Observer Pattern is  loose coupling as the Newsletter and Subscriber are indepently of each other.\n\n### Diagram\n\n![Observer Pattern](https://raw.githubusercontent.com/Hao-Luo/DesignPattern/master/ObserverPattern/Class%20Diagram.jpg)\n\n## Key Message To Take Away\n\n> - Observer Pattern is a very common pattern as you can see it in most of the programming languages, such as Events and Delegates.\n> - Observer Pattern is mainly for the purpose of loose coupling, one of the benefit is easy to write unit test.\n> - A-Update-All can be better than All-Check-A\n\n## Example Code\n\n[Observer Pattern Example](https://github.com/Hao-Luo/DesignPattern/tree/master/ObserverPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"- From the book: The Observer Pattern defines a one-to-many dependency between objects so that when one object changes state, all of its dependents are notified and updated automatically.\n- From ......","path":"posts/observer-pattern-a-update-all-can-be-better-than-all-check-a.6494949ad2b4050ed7a4976fc0e4d8ca.md"},{"title":"tagcloser - a python package to help you to close unclosed html tags","metas":{"title":"tagcloser - a python package to help you to close unclosed html tags","author":"sporule","date":"2018-12-07","categories":["code"],"tags":["python","tagcloser","excerpt"],"coverimage":"https://i.imgur.com/xccQnBJ.png"},"content":"\n\n\n## The Concept\n\nThe reason for me to create this package is I have had excerpt issues in my blog.\n\nMy blog's layout will change if my post excerpt have unclosed tag, I was using a plain text excerpt to replace HTML excerpt but it does not look great.\n\nThe solution itself is very simple, the logic is:\n\n- Finding all open html tags and close tags\n- Match open tags with close tags, find the tags that are not closed\n- Close the unclosed tags by adding them at the end of the excerpt\n\nIt is dead simple but I think it is very useful.\n\n## How To Use\n\n### Installing\n\nInstall it through pip\n\n```python\npip install tagcloser\n```\n\n### Integrate with your code\n\n```python\nimport tagcloser\n\nsample_html = '<div>This is a unclosed tag html'\nclosed_html = tagcloser.close_tags(sample_html)\n#It will return '<div> This is a unclosed tag html </div>'\n```\n\n### Github Repositry\n\n[TagCloser](https://github.com/Hao-Luo/TagCloser)\n","excerpt":"The reason for me to create this package is I have had excerpt issues in my blog.\n\nMy blog's layout will change if my post excerpt have unclosed tag, I was ......","path":"posts/tagcloser-a-python-package-to-help-you-to-close-unclosed-html-tags.fd39a8e5019297db08a639a9f725ea57.md"},{"title":"strategy pattern - has-a can be better than is-a","metas":{"title":"strategy pattern - has-a can be better than is-a","author":"sporule","date":"2018-11-23","categories":["design pattern"],"tags":["strategy pattern"],"coverimage":"https://raw.githubusercontent.com/hao-hao-hao/DesignPattern/master/StrategyPattern/Class%20Diagram.jpg"},"content":"\n\n## What is Strategy Pattern\n\n- From the Book: The Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. Strategy lets the algorithm vary independently from clients that use it.\n- From me: Strategy Pattern is trying to resolve the problem of inheritance by using composition( Has-a rather than Is-a ).\n\n## The Problem\n\nIn this example, we own different cars and we have different ways(or no way) to charge their batteries.\n\nPlease aware that the example may be non sense.\n\nFor example :\n\n| Car Type          | Where to Charge |\n| ----------------- | --------------- |\n| Eletric Car       | At Home         |\n| Plugin Hybrid Car | At Station      |\n| Sports Car        | Can't Charge    |\n\n## Inheritance Style Implementation\n\nBy using inheritance, we can simply create a base model Car with a function charge().\n\n```python\nclass Car():\n    \"\"\"Base class of all cars\"\"\"\n\n    def charge(self):\n        print(\"Charge my car\")\n```\n\nThen implement the charge()  individually in the children class.\n\n``` python\nclass Sports_Car(Car):\n    def __init__(self, registration):\n        super().__init__(registration)\n\n    def display(self):\n        print(\"I am a Sports Car\")\n\n    def charge(self):\n        print(\"I can't charge my car\")\n```\n\nHowever, it is very hard to reuse the code and keep consistent of all the children.\n\n## Strategy Pattern Style Implementation:\n\nIt is similar as the inheritance style, we simply create a base model Car with a property charge_behaviour.\n\n```python\nclass Car():\n    \"\"\"Base class of all cars\"\"\"\n\n    @property\n    def charge_behaviour(self):\n        return self._charge_behaviour\n```\n\nInstead of individual implementation, we create an interface/abstract class  call Charge Behaviour.\n\n```python\nclass Charge_Behaviour(metaclass=abc.ABCMeta):\n    \"\"\"This is the charge behaviour abstract class\"\"\"\n    @abc.abstractmethod\n    def charge(self):\n        raise NotImlementError()\n```\n\nAnd then we create different behaviour that is inherited from Charge Behaviour\n\n```python\nclass Charge_at_Home(Charge_Behaviour):\n    def charge(self):\n        print(\"I am charging at home\")\n\nclass Charge_at_Station(Charge_Behaviour):\n    def charge(self):\n        print(\"I am charging my car at the station\")\n\nclass Cant_Charge(Charge_Behaviour):\n    def charge(self):\n        print(\"I can't charge my car\")\n```\n\nIn the Car class, we added some condition for charge behaviour setter which only allow Charge Behaviour Instance.\n\nIn addition, we create a charge() function in the Car class which runs the charge_behaviour.charge()\n\n```python\nclass Car():\n    \"\"\"Base class of all cars\"\"\"\n    @property\n    def charge_behaviour(self):\n        return self._charge_behaviour\n\n    @charge_behaviour.setter\n    def charge_behaviour(self, value):\n        \"\"\"only allow to set behaviour if it is the instance of Charge_Behaviour\n        \"\"\"\n        if(isinstance(value,Charge_Behaviour)):\n            self._charge_behaviour = value\n        else:\n            print(\"Sorry, the behaviour you selected is not a charge behaviour\")\n\n    def charge(self):\n        self.charge_behaviour.charge()\n```\n\nThe children classes are not overriding the parent class's charge(), it create a new instance of Charge Behaviour and assign it to the charge_behaviour property in the constructor:\n\n```python\nclass Eletric_Car(Car):\n    def __init__(self,registration):\n        super().__init__(registration)\n        self.charge_behaviour = Charge_at_Home()\n\nclass Plugin_Hybrid_Car(Car):\n    def __init__(self, registration):\n        super().__init__(registration)\n        self.charge_behaviour = Charge_at_Station()\n\nclass Sports_Car(Car):\n    def __init__(self, registration):\n        super().__init__(registration)\n        self.charge_behaviour= Cant_Charge()\n```\n\n(Please note that this is not the best practise as we are creating a new instance in constructor, but we will fix this after I finish reading the Book.)\n\nIn this way, we can easily switch its charge behaviour at run time, such as:\n\n```python\n#PHEV Car\nprint (\"PHEV Car:\")\nphcar = Plugin_Hybrid_Car(\"CCC42AC\")\n#change the behaviour at run time\nphcar.charge_behaviour = Cant_Charge()\nphcar.charge()\n```\n\n### Diagram\n\n![Strategy Pattern](https://raw.githubusercontent.com/hao-hao-hao/DesignPattern/master/StrategyPattern/Class%20Diagram.jpg)\n\n## Key Message To Take Away\n\nFavour composition over inheritance (Has A is better than Is A)\nIdentify the aspects of vary and separate them from what stays the same.\nProgram to an interface, not an implementation. (We used different charge hehaviour class to implement the behaviour rather than implementing them in the parent Car class or Children classes)\n\n## Example Code\n\n[Strategy Pattern Example](https://github.com/hao-hao-hao/DesignPattern/tree/master/StrategyPattern)\n\n## Credit\n\n<< Head First Design Patterns >>\n","excerpt":"- From the Book: The Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. Strategy lets the algorithm vary independently from clients that use it.\n- ......","path":"posts/strategy-pattern-has-a-can-be-better-than-is-a.d184cca675216517ab940be4c20f37a8.md"},{"title":"drop all tables in the microsoft sql server","metas":{"title":"drop all tables in the microsoft sql server","author":"sporule","date":"2018-11-08","categories":["code"],"tags":["sql"],"coverimage":"http://www.wisetrack.com/wp-content/uploads/2018/05/1768.sql_logo.png"},"content":"\n\n## Main Topic\n\nSometimes it is a pain to drop the database and recreate it, now I found a script that can drop all tables in the database which is nice.\n\n```bash\nDECLARE @Sql NVARCHAR(500) DECLARE @Cursor CURSOR\n\nSET @Cursor = CURSOR FAST_FORWARD FOR\nSELECT DISTINCT sql = 'ALTER TABLE [' + tc2.TABLE_NAME + '] DROP [' + rc1.CONSTRAINT_NAME + ']'\nFROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc1\nLEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc2 ON tc2.CONSTRAINT_NAME =rc1.CONSTRAINT_NAME\n\nOPEN @Cursor FETCH NEXT FROM @Cursor INTO @Sql\n\nWHILE (@@FETCH_STATUS = 0)\nBEGIN\nExec sp_executesql @Sql\nFETCH NEXT FROM @Cursor INTO @Sql\nEND\n\nCLOSE @Cursor DEALLOCATE @Cursor\nGO\n\nEXEC sp_MSforeachtable 'DROP TABLE ?'\nGO\n```\n\n## Credit\n\nOriginal from [Here](https://social.msdn.microsoft.com/Forums/sqlserver/en-US/a512be8a-376f-4fc9-8243-78dbdbe59e55/how-to-deletedrop-all-the-tables-from-sql-server-database-without-using-enterprise-manager?forum=transactsql)\n","excerpt":"Sometimes it is a pain to drop the database and recreate it, now I found a script that can drop all tables in the database which is nice.\n\n```bash\nDECLARE @Sql NVARCHAR(500) ......","path":"posts/drop-all-tables-in-the-microsoft-sql-server.45e3d49e3de407aeea2dbedf9c681962.md"},{"title":"integration of ckeditor 4 with imgur plugin (image uploading)","metas":{"title":"integration of ckeditor 4 with imgur plugin (image uploading)","author":"sporule","date":"2018-10-22","categories":["code"],"tags":["sporule","ckeditor","imgur","javascript"],"coverimage":"https://ckeditor.com/assets/images/og/ogimage-ck4-1ea514a336.png"},"content":"\n\n## Introduction\n\nI was trying out different rich text editors for web, they all good but I found CKEditor 4 is the easiest to set up.\n\n## How to Implement\n\n### Download\n\nGo to [CKEditor Builder](https://ckeditor.com/cke4/builder).\nClick download after you pick the plugins, skins and langauges you want. Save the CKEditor files in the server. You can delete the example folder.\n\n### Insert into your html file\n\n- Add a textarea with id editor in your page.\n\n```javascript\n<textarea id=\"editor\"></textarea>\n```\n\n- Load the ckeditor.js and the config.js from the downloaded files.\n\n```javascript\n<!-- CK  Editor Module -->\n<script src=\"/static/ckeditor/ckeditor.js\"></script>\n<script src=\"/static/ckeditor/config.js\"></script>\n```\n\n- Use Javascript in the page to initiate the CKEditor.\n\n```javascript\nCKEDITOR.replace( '#editor' );\n```\n\n- Thats it, check your page and you will be able to see the CKEditor.\n- For uploading image, I have selected the Imgur plugin which allows me to upload the image to Imgur (Imgur is a free online image storage cloud) easily, what you need is a Client Id from the Imgur API, and then add it to the config.js\n\n```javascript\nconfig.extraPlugins = 'imgur';\nconfig.imgurClientId = 'Your-Client-id';\n```\n","excerpt":"I was trying out different rich text editors for web, they all good but I found CKEditor 4 is the easiest to set up.\n\n\n\n\n\nGo to CKEditor Builder.\nClick download after you ......","path":"posts/integration-of-ckeditor-4-with-imgur-plugin--image-uploading.cee427db699f61098c68143896db859e.md"},{"title":"learn d3.js and build a simple mind map web application in a day with flask","metas":{"title":"learn d3.js and build a simple mind map web application in a day with flask","author":"sporule","date":"2018-10-13","categories":["code"],"tags":["d3.js","python","flask","javascript"],"coverimage":"https://i0.wp.com/blog.knoldus.com/wp-content/uploads/2017/06/d3logo.png?fit=590%2C313&ssl=1"},"content":"\n\n## Introduction\n\nD3.js it is a popular tool for Data Visualisation, I have spent a day to explore it and built a simple mind map application.\n\nThe application structure is quiet simple:\n\n- Back-end: Web API by Flask in Python\n- Front-end: D3.js\n\n![mind map](https://i.imgur.com/RJHtEm1.png) \n\nAs the focus is mainly on trying the D3.js, so the web api doesn't come with any security implementation.\n\nIn addition, the JavaScript code is not organised very well. I might improve the code in the future if I have some spare time.\n\n## Key Feature of D3.js\n\nThe only key feature I learned from the day is D3.js provides a very simple way to select New Data, Modified Data and Removed Data.\n\n1. New Data is accessed by blocks.enter()\n\n2. Modified Data is accessed by blocks\n\n3. Removed Data is accessed by blocks.exit()\n\nThese three functions enable the developer to update the graph simply.\n\n## Implementation\n\n### Functionality of the Mind Map app\n\n1. Add a new mind block by left click any empty spaces\n\n2. Create a link between mind blocks by dragging from one to the other.\n\n3. Move mind blocks by dragging the special area in the block.\n\n4. Auto size of the mind blocks according to the content length.\n\n5. Save the current layout and blocks by click save.\n  \n### What is the Design\n\n1. Created two global arrays(Not a good practise): Blocks_Data for block information and Links_Data(Contains Parent and Child Information) for block links information\n\n2. Few functions to implement the link the blocks and store the information into Links_Data\n\n3. Convert two global arrays to JSON and save into the database through Web API.(Not a good practise)\n\n### Check The Code\n\nPlease do check the GitHub code if you want to know the details, the repository is [hao-hao-hao/D3MindMap](https://github.com/hao-hao-hao/D3MindMap) .\n","excerpt":"D3.js it is a popular tool for Data Visualisation, I have spent a day to explore it and built a simple mind map application.\n\nThe application structure is quiet simple:\n\n- Back-end: ......","path":"posts/learn-d3js-and-build-a-simple-mind-map-web-application-in-a-day-with-flask.344112d7673acb85e610d3b39b1ebb0a.md"},{"title":"use flask-migrate to update the structure and columns of the current database","metas":{"title":"use flask-migrate to update the structure and columns of the current database","author":"sporule","date":"2018-09-28","categories":["code"],"tags":["flask-migrate","database","flask-sqlalchemy","flask","python"],"coverimage":"https://i.ytimg.com/vi/BAOfjPuVby0/maxresdefault.jpg"},"content":"\n\n## The Problem\n\nThis website(Sporule) is built by using Flask and Flask-SqlAlchemy (an Object Relational Mapping tool) which maps all the model classes to the database.\n\nAny changes in the model class will need the change of the database. Even though it is possible, but it is time consuming.\n\nFlask-Migrate(flask-migrate.readthedocs.io) provided us an easy way to update our database after the changing of model classes, please be aware that you will still need to change the Flask-Migrate generated scripts if the models change is huge (such as database relationship change).\n\n## The Solution\n\n### Step 1\nuse pip to install Flask-Migrate in your environment or virtual environment\n  \n### Step 2\n\nInitiate the Flask-Migrate with Flask-SqlAlchemy and the Flask App instance\n\n```python\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask import Flask\nfrom flask_migrate import Migrate\n\n#create app instance\napp = Flask(__name__)\n\n# Create SQLAlchemy instance\ndb = SQLAlchemy()\ndb.init_app(app)\n\n#Initiate Flask-Migrate\nMigrate(app, db)\n```\n\n### Step 3\n\nIn terminal, please setup the system environment variable \"FLASK_APP\" to the startup flask file such as run.py or app.py in your environment or virtual environment\n\n```bash\n#setup FLASK_APP environment variable\nexport FLASK_APP=run.py\n```\n\n### Step 4\n\nIn the root folder of the Flask app, where the startup flask file is, initiate the flask-migrate which will create a migration folder\n\n```bash\n#type below in the terminal\n$ flask db init\n```\n\n### Step 5\n\nType below line in the terminal to generate migrate script which will be stored in migrations/versions/ , you can review it to see if it looks OK.\n\n```bash\n$ flask db migrate\n```\n\n### Step 6\n\nExecute the script to update the database structure\n\n```bash\n$ flask db upgrade\n```\n\n### Notes\n\nIn the future, you just need to repeat step 5 and 6 to update the structure of the database.","excerpt":"This website(Sporule) is built by using Flask and Flask-SqlAlchemy (an Object Relational Mapping tool) which maps all the model classes to the database.\n\nAny changes in the model class will need ......","path":"posts/use-flask-migrate-to-update-the-structure-and-columns-of-the-current-database.ff9d469cd473c106ad60c2d7739d97ca.md"},{"title":"pyenv virtualenv's pip is installing in global site-packages instead of virtualenv (pip permission issues)","metas":{"title":"pyenv virtualenv's pip is installing in global site-packages instead of virtualenv (pip permission issues)","author":"sporule","date":"2018-09-12","categories":["notes"],"tags":["pyenv","pip","troubleshooting","python"],"coverimage":"https://zaxrosenberg.com/wp-content/uploads/2017/06/python-virtualenv.jpg"},"content":"\n\n## The Problem\n\nI was having issue in my virtual environment that my PIP does not have permission to install packages because all the virtual environment packages were installed in the global site-packages rather than the virtualenv's site-packages. I think the issue was caused by using sudo to install the virutal environemnt which changed the System Environment Variable.\n\n## The Solution\n\nAfter some research on Google, I have found a few solutions:\n\n### Step 1\n\nThe System environment variable \"PATH\" was set in the environment variable, we need to remove that so it can be pointed correctly to the virtual environment. Solution is typing the below code in the terminal:\n\n```bash\n$PATH\n```\n\n### Step 2\n\nYou can see the System environment variable \"PATH\" was set to the local bin, such as:\n\n```bash\nPATH=/home/<yourusername>/bin:/home/<yourusername>/.local/bin:/home/<yourusername>/.pyenv/shims:~/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\n```\n\n### Step 3\n\nThe solution will be remove the parts that include bin and /.local/bin from the environment, so type the below code in the terminal:  \n\n```bash\nPATH=/home/<yourusername>/.pyenv/shims:~/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\n```\n","excerpt":"I was having issue in my virtual environment that my PIP does not have permission to install packages because all the virtual environment packages were installed in the global site-packages ......","path":"posts/pyenv-virtualenvs-pip-is-installing-in-global-site-packages-instead-of-virtualenv-pip-permission-issues.ab0178d3a45188e9464cd327497a30e8.md"},{"title":"using mgov2 for querying mongodb in golang with some extra helper functions","metas":{"title":"using mgov2 for querying mongodb in golang with some extra helper functions","author":"sporule","date":"2018-07-08","categories":["code"],"tags":["golang","mongodb","odm","hook"],"coverimage":"https://hackernoon.com/hn-images/1*WpUuwCQZWhVzP3X0Gibaqw.png"},"content":"\n\n## Introduction\n\nMongoDB is one of the common NOSQL databases to use, however it does not have a stable ODM to support Golang.\n\nIt means we need to use the MgoV2 (mongodb driver) to create our own implementation.\n\n## Implementation\n\n### Installation\n\nFirst of all, we need to install the Mgov2, simply use go get:\n\n```bash\ngo get gopkg.in/mgo.v2\n```\n\n### Integration\n\nTo start with, I created a MongoDB strcut to store the session as well as a function to return copied sessions\n\n```go\n//MongoDB Type is simply a holder\ntype MongoDB struct {\n\t//This original session is not open to public\n\tsession *mgo.Session\n\t//Session provides a copied session for operations, remember to close it by using defer session.Close()\n\tSession func() *mgo.Session\n}\n```\n\nNow we need to build a constructor for the MongoDB to initate the session\n\n```go\nimport (\n\t\"gopkg.in/mgo.v2\"\n\t\"gopkg.in/mgo.v2/bson\"\n)\n\n//NewMongoDB initiates the db session\nfunc NewMongoDB(host, database, username, password string, dropDB bool) (*MongoDB, error) {\n\tdb := &MongoDB{}\n\tvar err error\n\t//create a new session\n\tdb.session, err = mgo.DialWithInfo(\n\t\t&mgo.DialInfo{\n\t\t\tUsername: username,\n\t\t\tPassword: password,\n\t\t\tDatabase: database,\n\t\t\tAddrs:    []string{host},\n\t\t},\n\t)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\t//set up the Session fucntion to return a copy of the db session\n\tdb.Session = func() *mgo.Session { return db.session.Copy() }\n\n\tif dropDB {\n\t\t//This is purely for testing purpose, it will drop the database if it is true.\n\t\tdb.dropDatabase()\n\t}\n\treturn db, nil\n}\n```\n\nAfter having a session, we need to implement some basic functions for MongoDB CRUD opeartions.\n\n```go\n//collection provides a copied session as well as its collection, this is a helper function for CRUD\nfunc (db *MongoDB) collection(collection string) (*mgo.Session, *mgo.Collection) {\n\ts := db.Session()\n\tc := s.DB(Config.Database).C(collection)\n\treturn s, c\n}\n\n//Create provides Insert Operation for Database\nfunc (db *MongoDB) Create(collection string, item interface{}) error {\n\t//get the session and collection\n\ts, c := db.collection(collection)\n\t//close the session after usage\n\tdefer s.Close()\n\t//run the Insert function\n\terr := c.Insert(item)\n\treturn err\n}\n\n\n//Get takes in the table name, pointer to the single obejct,\n//mongodb query and a hook function to implement the extra query such as select,slice..\n//the result will be return to the object pointer\nfunc (db *MongoDB) Get(table string, object, query interface{}, extraQuery func(*mgo.Query) *mgo.Query) error {\n\ts, c := db.collection(table)\n\tdefer s.Close()\n\tq := c.Find(query)\n\tif extraQuery != nil {\n\t\t//run queries in the hook if the hook is not empty\n\t\tq = extraQuery(q)\n\t}\n\terr := q.One(object)\n\treturn err\n}\n\n//GetAll takes in the table name, pointer to the obejct array,\n//mongodb query and a hook function to implement the extra query such as select,slice..\n//the result will be return to the object array pointer\nfunc (db *MongoDB) GetAll(table string, objects, query interface{}, extraQuery func(*mgo.Query) *mgo.Query) error {\n\ts, c := db.collection(table)\n\tdefer s.Close()\n\tq := c.Find(query)\n\tif extraQuery != nil {\n\t\t//run queries in the hook if the hook is not empty\n\t\tq = extraQuery(q)\n\t}\n\terr := q.All(objects)\n\treturn err\n}\n\n//Update provides Update Operation for Database\nfunc (db *MongoDB) Update(collection string, query, updatedItem interface{}, UpdateAll bool) error {\n\ts, c := db.collection(collection)\n\tdefer s.Close()\n\tvar err error\n\tif UpdateAll {\n\t\t_, err = c.UpdateAll(query, bson.M{\"$set\": updatedItem})\n\t} else {\n\t\terr = c.Update(query, updatedItem)\n\t}\n\treturn err\n}\n\n//Delete provides Delete Operation for Database\nfunc (db *MongoDB) Delete(collection string, query interface{}, RemoveAll bool) error {\n\ts, c := db.collection(collection)\n\tdefer s.Close()\n\tvar err error\n\tif RemoveAll {\n\t\t_, err = c.RemoveAll(query)\n\t\treturn err\n\t}\n\terr = c.Remove(query)\n\treturn err\n}\n\n//DropDatabase drop the database\nfunc (db *MongoDB) dropDatabase() error {\n\treturn db.session.DB(Config.Database).DropDatabase()\n}\n\n//Below two functions are for the mongodb aggregate function\n\n//AggGet is the aggregate pipe function for mongo db, it takes an bson.M arrary query and assign one item to object.\nfunc (db *MongoDB) AggGet(table string, object interface{}, queries ...bson.M) error {\n\ts, c := db.collection(table)\n\tdefer s.Close()\n\terr := c.Pipe(queries).One(object)\n\treturn err\n}\n\n//AggGetAll is the aggregate pipe function for mongo db, it takes an bson.M arrary query and assign an arrary to the objects\nfunc (db *MongoDB) AggGetAll(table string, objects interface{}, queries ...bson.M) error {\n\ts, c := db.collection(table)\n\tdefer s.Close()\n\terr := c.Pipe(queries).All(objects)\n\treturn err\n}\n```\n\nNow we have the CRUD, but we still need to have some fucntion to help simplify the the MongoDB query, so I created below functions. These functions are the implementation of the MongoDB operations that you can find on MongoDB website(The names of the functions matches the name of the operations. For example In is $in).\n\n```go\n//QueryHelper is query helper struct for mongo DB, this is purely for better organisations\ntype QueryHelper struct{}\n\n//MgoQry is a public exposed functions for buildding different querys\nvar MgoQry QueryHelper\n\n//Bson returns a bson.M key value pair\nfunc (query *QueryHelper) Bson(key string, value interface{}) bson.M {\n\treturn bson.M{key: value}\n}\n\n//Bsons returns multiple bson.M key value pairs\nfunc (query *QueryHelper) Bsons(keyValuePairs map[string]interface{}) bson.M {\n\tqry := bson.M{}\n\tfor key, value := range keyValuePairs {\n\t\tqry[key] = value\n\t}\n\treturn qry\n}\n\n//All will match all queies in arrary\nfunc (query *QueryHelper) All(values ...interface{}) bson.M {\n\treturn query.Bson(\"$all\", values)\n}\n\n//In will match any queries in arrary\nfunc (query *QueryHelper) In(values ...interface{}) bson.M {\n\treturn query.Bson(\"$in\", values)\n}\n\n//Nin will match anything other than the queies in arrary\nfunc (query *QueryHelper) Nin(values ...interface{}) bson.M {\n\treturn query.Bson(\"$nin\", values)\n}\n\n//Eq matches equale comparison\nfunc (query *QueryHelper) Eq(value interface{}) bson.M {\n\treturn query.Bson(\"$eq\", value)\n}\n\n//Gt matches greater comparison\nfunc (query *QueryHelper) Gt(value interface{}) bson.M {\n\treturn query.Bson(\"$gt\", value)\n}\n\n//Gte matches greater or equal comparison\nfunc (query *QueryHelper) Gte(value interface{}) bson.M {\n\treturn query.Bson(\"$gte\", value)\n}\n\n//Lt matches less comparison\nfunc (query *QueryHelper) Lt(value interface{}) bson.M {\n\treturn query.Bson(\"$lt\", value)\n}\n\n//Lte matches less or equal comparison\nfunc (query *QueryHelper) Lte(value interface{}) bson.M {\n\treturn query.Bson(\"$lte\", value)\n}\n\n//And provides and relationship\nfunc (query *QueryHelper) And(queries ...interface{}) bson.M {\n\treturn query.Bson(\"$and\", queries)\n}\n\n//Or provides and relationship\nfunc (query *QueryHelper) Or(values ...interface{}) bson.M {\n\treturn query.Bson(\"$Or\", values)\n}\n\n//Not provides NOT relationship\nfunc (query *QueryHelper) Not(value interface{}) bson.M {\n\treturn query.Bson(\"$not\", value)\n}\n\n//Nor provides NOR relationship\nfunc (query *QueryHelper) Nor(values ...interface{}) bson.M {\n\treturn query.Bson(\"$nor\", values)\n}\n\n//Slice sets the item skip and limit of the query\nfunc (query *QueryHelper) Slice(skip, limit int) bson.M {\n\treturn query.Bson(\"$slice\", []int{skip, limit})\n}\n\n//Select takes fields name and returns the \"filenames\":\"1\" to select the input fields\nfunc (query *QueryHelper) Select(isSelect bool, values ...string) bson.M {\n\tselector := bson.M{}\n\tfor _, value := range values {\n\t\tselector[value] = isSelect\n\t}\n\treturn selector\n}\n\n//Match returns the bson.M for $match operation, this is for aggregation queries only\nfunc (query *QueryHelper) Match(qry interface{}) bson.M {\n\treturn query.Bson(\"$match\", qry)\n}\n\n//Limit returns the bson.M for $limit operation, this is for aggregation queries only\nfunc (query *QueryHelper) Limit(maxReturn int) bson.M {\n\treturn query.Bson(\"$limit\", maxReturn)\n}\n\n//Sort returns the bson.M for $sort operation, it takes only one fields, this is for aggregation queries only\nfunc (query *QueryHelper) Sort(field string, isDescending bool) bson.M {\n\torder := 1\n\tif isDescending {\n\t\t// 1 is ascending and -1 is descending\n\t\torder = -1\n\t}\n\treturn query.Bson(\"$sort\", query.Bson(field, order))\n}\n\n//Sorts returns the bson.M for $sort operation, it takes multiple key value pairs, this is for aggregation queries only\n//Use field name as key and 1/-1 in the value,1 is ascending and -1 is descending\nfunc (query *QueryHelper) Sorts(keyValuePairs map[string]interface{}) bson.M {\n\treturn query.Bson(\"$sort\", query.Bsons(keyValuePairs))\n}\n\n//Project returns the bson.M for $project operation which sets the selected fields in SQL, this is for aggregation queries only\nfunc (query *QueryHelper) Project(qry interface{}) bson.M {\n\treturn query.Bson(\"$project\", qry)\n}\n\n//LookUp returns the bson.M for $lookup operation, this is for aggregation queries only\nfunc (query *QueryHelper) LookUp(from, localField, foreignField, as string) bson.M {\n\tqry := make(map[string]interface{})\n\tqry[\"from\"] = from\n\tqry[\"localField\"] = localField\n\tqry[\"foreignField\"] = foreignField\n\tqry[\"as\"] = as\n\treturn query.Bson(\"$lookup\", query.Bsons(qry))\n}\n```\n\nHow to use in an object call user:\n\n```go\n//Some basic structs\n\n//User struct, Roles is an arrary to store the data from Role strcut, it will not\n//be saved to the database. The RoleIds will be saved into the database.\n//Please ensure the Roles is empty before running insert or update.\ntype User struct {\n\tID          bson.ObjectId `bson:\"_id,omitempty\"`\n\tEmail       string        `bson:\"email,omitempty\"`\n\tPassword    string        `bson:\"password,omitempty\"`\n\tName        string        `bson:\"name,omitempty\"`\n\tRoleIds     []bson.ObjectId `bson:\"roleIds,omitempty\"`\n\tRoles       []Role          `bson:\"roles,omitempty\"`\n}\n\ntype Role struct {\n\tID   bson.ObjectId `bson:\"_id,omitempty\"`\n\tName string        `bson:\"name\"`\n}\n\n//userCollection is the collection name for Model User in mongo db\nconst userCollection = \"user\"\n\n//Resources is the db\nvar Resources MongoDB\n\n//Get Users by unning a query\nfunc GetUsers() (error) {\n    //Initiate the database, the variable Config.XX is a custom strcut that are reading configuration from json file\n\tResources, _ = NewMongoDB(Config.Host, Config.Database, Config.Username, Config.Password, Config.DropDB)\n\n\tvar usersA []User\n    var usersB []User\n\n    //build mongo query, it means roles.name that does not contain Admin\n\tqry := MgoQry.And(MgoQry.Bson(\"roles.name\", MgoQry.Nin(\"Admin\")))\n\n\n\terr := Resources.GetAll(userCollection, &usersA, qry, func(query *mgo.Query) *mgo.Query {\n        //This is the implementation of the hook function to select only email field\n\t\treturn query.Select(MgoQry.Select(\"email\"))\n\t})\n    \n    //below is aggregate operation in mongodb\n\n    //filter query\n    filter := MgoQry.And(MgoQry.Bson(\"roles.name\", \"Admin\"))\n\n    //aggregate query will be execute in mongodb in order, see official mongo db document for more information\n\terr := Resources.AggGetAll(userCollection, &usersB,\n        //below are the aggregate queries\n\t\tMgoQry.LookUp(\"role\", \"roleIds\", \"_id\", \"roles\"),\n\t\tMgoQry.Match(filter),\n\t\tMgoQry.Project(common.MgoQry.Select(true, \"email\", \"_id\")))\n\n\treturn err\n}\n```\n\nAbove is the example of using GetAll with hook, you can use the same way to implement Get, Delete, Update etc...","excerpt":"MongoDB is one of the common NOSQL databases to use, however it does not have a stable ODM to support Golang.\n\nIt means we need to use the MgoV2 (mongodb driver) ......","path":"posts/using-mgov2-for-querying-mongodb-in-golang-with-some-extra-helper-functions.a145a4042ab53f6a10160f9b29babfa5.md"}]